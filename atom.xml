<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kikita &amp; Maps</title>
  
  <subtitle>GIS,spatial and artificial intellegence learning and share</subtitle>
  <link href="https://kikitamap.com/atom.xml" rel="self"/>
  
  <link href="https://kikitamap.com/"/>
  <updated>2025-01-02T10:21:09.215Z</updated>
  <id>https://kikitamap.com/</id>
  
  <author>
    <name>Xiaoyan MU</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Volcanic Islands and Atolls — Exploring and Interpreting with ArcGIS Earth</title>
    <link href="https://kikitamap.com/2024/12/30/BBC-Volcanos-2-en/"/>
    <id>https://kikitamap.com/2024/12/30/BBC-Volcanos-2-en/</id>
    <published>2024-12-30T09:35:34.000Z</published>
    <updated>2025-01-02T10:21:09.215Z</updated>
    
    <content type="html"><![CDATA[<p>Volcanoes are not only sculptors of the Earth but also windows for scientists to study geological activity.</p><p><a href="https://kikitamap.com/2024/12/25/BBC-Volcanos-1/"><strong>Previous Article</strong></a>: In our previous exploration, we embarked on a journey using ArcGIS Earth to uncover the mysteries of volcanoes and familiarize ourselves with its basic operations. Today, let’s dive further into the three-dimensional world of volcanoes and explore the possibilities of combining terrain and data.</p><p>Leaving behind the perilous Fernandina Volcano, we continue onward. Following the lens, we slide northward in the eastern Pacific…</p><h2 id="04-Wolf-Island"><a href="#04-Wolf-Island" class="headerlink" title="04 Wolf Island"></a>04 Wolf Island</h2><p>Wolf Island is a dormant volcano over a million years old, located more than 1,200 kilometers from the nearest continent. It is one of the most remote volcanic islands in the Galápagos Archipelago.</p><p><img data-src="/images/blogImg/Volcano_2_WolfIsland_1.png"></p><p>Survival on this isolated volcanic island seems to have activated “hell mode.” To adapt to the harsh environment, animals here have evolved rapidly. On this barren island, small finches have evolved into a blood-sucking species—the vampire finch.</p><p><img data-src="/images/blogImg/Volcano_2_WolfIsland_2.png"></p><p>If you’re interested in tectonic plates, in ArcGIS Earth, you can click <strong>Add Data</strong> and search keywords like “Earth” or “Tectonic.” Among the publicly available resources on ArcGIS Online is <span class="exturl" data-url="aHR0cHM6Ly93d3cuYXJjZ2lzLmNvbS9ob21lL2l0ZW0uaHRtbD9pZD1mNGQ1OGRlNjMzMjY0Mzg0OTNhZjE5YzkxNTZjYTNlYw==">Earth’s Tectonic Plates<i class="fa fa-external-link-alt"></i></span>. After adding this data to ArcGIS Earth, we can clearly see that the Galápagos Archipelago sits at the intersection of three major tectonic plates: the Nazca, Cocos, and Pacific Plates.</p><p><img data-src="/images/blogImg/Volcano_2_WolfIsland_3.png"></p><h2 id="05-Aldabra-Atoll"><a href="#05-Aldabra-Atoll" class="headerlink" title="05 Aldabra Atoll"></a>05 Aldabra Atoll</h2><p>Like living organisms, volcanic islands do not exist forever. Once the volcano’s interior becomes dormant and dies, external forces gradually erode it, forming atolls.</p><p>There are hundreds of atolls in tropical oceans, all remnants of volcanoes. The Aldabra Atoll is one of the largest and most pristine atolls in the world, located in the Indian Ocean about 420 kilometers north of Madagascar. It is also known as Turtle Island because it is home to giant tortoises.</p><p>In ArcGIS Earth, the default basemap is the global imagery map—<a href="https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer"><strong>Imagery</strong></a>. Users can replace it with other basemaps based on their needs, such as switching to <a href="https://www.arcgis.com/home/item.html?id=620875bf8a1945e799cf8bd5f25784d7"><strong>Ocean</strong></a> to explore the underwater terrain of atolls. In addition to basemaps, ArcGIS Earth’s default elevation layer is <a href="https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer"><strong>Terrain</strong></a>, which provides global elevation data. Users can also add additional elevation layers to highlight terrain features, such as adding <a href="https://www.arcgis.com/home/item.html?id=0c69ba5a5d254118841d43f03aa3e97d"><strong>TopoBathy3D</strong></a> to better visualize underwater terrain.</p><p><img data-src="/images/blogImg/Volcano_2_Aldabra.png"></p><p><strong>Bookmarks</strong> in ArcGIS Earth act as a “geographic favorites” tool, allowing you to save the current scene’s camera position, basemap, terrain, and other settings, enabling quick one-click switching between different scene configurations.</p><p><img data-src="/images/blogImg/Volcano_2_Aldabra_BM.gif"></p><p>From basic navigation to simple geographic observation, we’ve taken our first steps in using ArcGIS Earth. In the next article, we’ll delve deeper into the allure of volcano topography and 3D scenes, unveiling more geological secrets hidden beneath the surface.</p><h2 id="Download-ArcGIS-Earth"><a href="#Download-ArcGIS-Earth" class="headerlink" title="Download ArcGIS Earth"></a>Download ArcGIS Earth</h2><p>ArcGIS Earth is a free tool available for download. It allows you to add many publicly shared free resources from ArcGIS Online, including those from Esri, industry leaders, and individual enthusiasts. The videos featured here were created using this content. While video quality may be compressed for uploading, for the best experience, you’re encouraged to try it out for yourself.</p><p>If you’re interested, here’s where you can find versions for different platforms:<br><span class="exturl" data-url="aHR0cHM6Ly93d3cuZXNyaS5jb20vZW4tdXMvYXJjZ2lzL3Byb2R1Y3RzL2FyY2dpcy1lYXJ0aC9kb3dubG9hZHM=">https://www.esri.com/en-us/arcgis/products/arcgis-earth/downloads<i class="fa fa-external-link-alt"></i></span></p><hr><p>Let me know if further edits are needed!</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Volcanoes are not only sculptors of the Earth but also windows for scientists to study geological activity.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://kikitamap.com/2024/12/25/BBC-Volcanos-1/&quot;&gt;&lt;strong&gt;Previous Article&lt;/strong&gt;&lt;/a&gt;: In our previous exploration, we embarked on a journey using ArcGIS Earth to uncover the mysteries of volcanoes and familiarize ourselves with its basic operations. Today, let’s dive further into the three-dimensional world of volcanoes and explore the possibilities of combining terrain and data.&lt;/p&gt;
&lt;p&gt;Leaving behind the perilous Fernandina Volcano, we continue onward. Following the lens, we slide northward in the eastern Pacific…&lt;/p&gt;
&lt;h2 id=&quot;04-Wolf-Island&quot;&gt;&lt;a href=&quot;#04-Wolf-Island&quot; class=&quot;headerlink&quot; title=&quot;04 Wolf Island&quot;&gt;&lt;/a&gt;04 Wolf Island&lt;/h2&gt;&lt;p&gt;Wolf Island is a dormant volcano over a million years old, located more than 1,200 kilometers from the nearest continent. It is one of the most remote volcanic islands in the Galápagos Archipelago.&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;/images/blogImg/Volcano_2_WolfIsland_1.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Survival on this isolated volcanic island seems to have activated “hell mode.” To adapt to the harsh environment, animals here have evolved rapidly. On this barren island, small finches have evolved into a blood-sucking species—the vampire finch.&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;/images/blogImg/Volcano_2_WolfIsland_2.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;If you’re interested in tectonic plates, in ArcGIS Earth, you can click &lt;strong&gt;Add Data&lt;/strong&gt; and search keywords like “Earth” or “Tectonic.” Among the publicly available resources on ArcGIS Online is &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93d3cuYXJjZ2lzLmNvbS9ob21lL2l0ZW0uaHRtbD9pZD1mNGQ1OGRlNjMzMjY0Mzg0OTNhZjE5YzkxNTZjYTNlYw==&quot;&gt;Earth’s Tectonic Plates&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;. After adding this data to ArcGIS Earth, we can clearly see that the Galápagos Archipelago sits at the intersection of three major tectonic plates: the Nazca, Cocos, and Pacific Plates.&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;/images/blogImg/Volcano_2_WolfIsland_3.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Tech Notes" scheme="https://kikitamap.com/categories/Tech-Notes/"/>
    
    
    <category term="3D" scheme="https://kikitamap.com/tags/3D/"/>
    
    <category term="ArcGIS Earth" scheme="https://kikitamap.com/tags/ArcGIS-Earth/"/>
    
    <category term="BBC" scheme="https://kikitamap.com/tags/BBC/"/>
    
    <category term="Tutorials" scheme="https://kikitamap.com/tags/Tutorials/"/>
    
    <category term="Jump start" scheme="https://kikitamap.com/tags/Jump-start/"/>
    
    <category term="Bookmark" scheme="https://kikitamap.com/tags/Bookmark/"/>
    
    <category term="Terrain" scheme="https://kikitamap.com/tags/Terrain/"/>
    
    <category term="Basemap" scheme="https://kikitamap.com/tags/Basemap/"/>
    
  </entry>
  
  <entry>
    <title>海上火山遗迹 —— 用 ArcGIS Earth 探索解读</title>
    <link href="https://kikitamap.com/2024/12/30/BBC-Volcanos-2/"/>
    <id>https://kikitamap.com/2024/12/30/BBC-Volcanos-2/</id>
    <published>2024-12-30T07:45:15.000Z</published>
    <updated>2025-01-02T09:34:54.330Z</updated>
    
    <content type="html"><![CDATA[<p>火山不仅是地球的雕塑家，还是科学家们研究地质活动的窗口。</p><p><a href="https://kikitamap.com/2024/12/25/BBC-Volcanos-1/"><strong>上一篇</strong></a> 中，我们用 ArcGIS Earth 开启了火山探索之旅, 熟悉了 ArcGIS Earth 的基础操作。今天，让我们进一步进入火山的三维世界，探索地貌与数据结合的无限可能。</p><p>告别了险象环生的费尔南迪娜火山，我们继续前进。跟随镜头，在太平洋东部继续向北滑行……</p><h2 id="04-沃尔夫岛-Wolf-Island"><a href="#04-沃尔夫岛-Wolf-Island" class="headerlink" title="04 沃尔夫岛&#x2F;Wolf Island"></a>04 沃尔夫岛&#x2F;Wolf Island</h2><p>沃尔夫岛是一座已经年过百万岁的死火山，距离最近的大陆有1200多公里。 它是加拉帕戈斯群岛中极为偏远的火山岛。</p><p><img data-src="/images/blogImg/Volcano_2_WolfIsland_1.png"></p><p>在这个孤立的火山岛上，生存似乎是开启了地狱模式，为了适应环境，动物们迅猛进化。在贫瘠的小岛上，小小的鸟雀为了获取食物，已经进化成了嗜血的新物种——吸血地雀。</p><p><img data-src="/images/blogImg/Volcano_2_WolfIsland_2.png"></p><p>如果你对大陆板块感兴趣，在 ArcGIS Earth 中， 点击 Add Data 并搜索关键字 “Earth” 或 “Tectonic”, ArcGIS Online 中的公开资源 —— <span class="exturl" data-url="aHR0cHM6Ly93d3cuYXJjZ2lzLmNvbS9ob21lL2l0ZW0uaHRtbD9pZD1mNGQ1OGRlNjMzMjY0Mzg0OTNhZjE5YzkxNTZjYTNlYw==">Earth’s Tectonic Plates<i class="fa fa-external-link-alt"></i></span>。添加此数据到ArcGIS Earth后，我们可以清晰地看到，加拉帕戈斯群岛位于纳斯卡(Nazca)、科科斯(Cocos) 和 太平洋(Pacific) 这三个主要的构造板块的交汇处。</p><p><img data-src="/images/blogImg/Volcano_2_WolfIsland_3.png"></p><h2 id="05-阿尔达布拉环礁-Aldabra-Atoll"><a href="#05-阿尔达布拉环礁-Aldabra-Atoll" class="headerlink" title="05 阿尔达布拉环礁&#x2F;Aldabra Atoll"></a>05 阿尔达布拉环礁&#x2F;Aldabra Atoll</h2><p>如同生命体一样，火山岛不会永远存在。当火山口内部逐渐平静直至死亡之后，在外力的不断侵蚀下会形成环礁。</p><p>在热带海洋上有数百个环礁，这都是火山的遗迹。阿尔达布拉环礁，是世界上最大最原始的环礁之一，位于印度洋上，距离马达加斯加以北约420千米。阿尔达布拉环礁岛，又被称为龟岛，因其上生活着巨型龟。</p><p>在 ArcGIS Earth 中，默认的地球底图是全球影像–<a href="https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer"><strong>Imagery</strong></a>，用户可以根据实际需求任意更换为其他底图，例如更换为 <a href="https://www.arcgis.com/home/item.html?id=620875bf8a1945e799cf8bd5f25784d7"><strong>Ocean</strong></a> 来了解下环礁在海面以下的地形。 除了底图，ArcGIS Earth 中默认的的地形高程图层是 <a href="https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer"><strong>Terrain</strong></a>，全球的陆地地形高程数据。用户还可以额外设置高程图层来表达地形的起伏，这里新增一个 <a href="https://www.arcgis.com/home/item.html?id=0c69ba5a5d254118841d43f03aa3e97d"><strong>TopoBathy3D</strong></a> 来增补表达海底的地形。</p><p><img data-src="/images/blogImg/Volcano_2_Aldabra.png"></p><p>Bookmarks 是ArcGIS Earth 中提供的一个“地理收藏夹”工具，可以记录当前场景的相机、底图、地形等等设置，让你在不同配置的场景中一键快速切换。</p><p><img data-src="/images/blogImg/Volcano_2_Aldabra_BM.gif"></p><p>从基础的导航到简单的地理观察，我们已经迈出了使用 ArcGIS Earth 的第一步。在下一篇文章中，我们将深入探讨火山的地貌与三维场景的魅力，揭开隐藏在地表下的更多地理秘密。</p><h2 id="下载-ArcGIS-Earth"><a href="#下载-ArcGIS-Earth" class="headerlink" title="下载 ArcGIS Earth"></a>下载 ArcGIS Earth</h2><p>ArcGIS Earth 工具是免费下载使用的，其中可以添加 ArcGIS Online 平台中的诸多来自Esri官方、业界大V和个人爱好者分享的公开免费资源。上面的视频的录制都来自这些内容，上传公众号时会压损画质，为了达到更好的游览效果，大家不妨躬亲实验下。</p><p>如果感兴趣，这里可以找到各平台对应的版本：<br><span class="exturl" data-url="aHR0cHM6Ly93d3cuZXNyaS5jb20vZW4tdXMvYXJjZ2lzL3Byb2R1Y3RzL2FyY2dpcy1lYXJ0aC9kb3dubG9hZHM=">https://www.esri.com/en-us/arcgis/products/arcgis-earth/downloads<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;火山不仅是地球的雕塑家，还是科学家们研究地质活动的窗口。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://kikitamap.com/2024/12/25/BBC-Volcanos-1/&quot;&gt;&lt;strong&gt;上一篇&lt;/strong&gt;&lt;/a&gt; 中，我们用 ArcGIS Earth 开启了火山探索之旅, 熟悉了 ArcGIS Earth 的基础操作。今天，让我们进一步进入火山的三维世界，探索地貌与数据结合的无限可能。&lt;/p&gt;
&lt;p&gt;告别了险象环生的费尔南迪娜火山，我们继续前进。跟随镜头，在太平洋东部继续向北滑行……&lt;/p&gt;
&lt;h2 id=&quot;04-沃尔夫岛-Wolf-Island&quot;&gt;&lt;a href=&quot;#04-沃尔夫岛-Wolf-Island&quot; class=&quot;headerlink&quot; title=&quot;04 沃尔夫岛&amp;#x2F;Wolf Island&quot;&gt;&lt;/a&gt;04 沃尔夫岛&amp;#x2F;Wolf Island&lt;/h2&gt;&lt;p&gt;沃尔夫岛是一座已经年过百万岁的死火山，距离最近的大陆有1200多公里。 它是加拉帕戈斯群岛中极为偏远的火山岛。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;/images/blogImg/Volcano_2_WolfIsland_1.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;在这个孤立的火山岛上，生存似乎是开启了地狱模式，为了适应环境，动物们迅猛进化。在贫瘠的小岛上，小小的鸟雀为了获取食物，已经进化成了嗜血的新物种——吸血地雀。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;/images/blogImg/Volcano_2_WolfIsland_2.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果你对大陆板块感兴趣，在 ArcGIS Earth 中， 点击 Add Data 并搜索关键字 “Earth” 或 “Tectonic”, ArcGIS Online 中的公开资源 —— &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93d3cuYXJjZ2lzLmNvbS9ob21lL2l0ZW0uaHRtbD9pZD1mNGQ1OGRlNjMzMjY0Mzg0OTNhZjE5YzkxNTZjYTNlYw==&quot;&gt;Earth’s Tectonic Plates&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;。添加此数据到ArcGIS Earth后，我们可以清晰地看到，加拉帕戈斯群岛位于纳斯卡(Nazca)、科科斯(Cocos) 和 太平洋(Pacific) 这三个主要的构造板块的交汇处。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;/images/blogImg/Volcano_2_WolfIsland_3.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Tech Notes" scheme="https://kikitamap.com/categories/Tech-Notes/"/>
    
    
    <category term="3D" scheme="https://kikitamap.com/tags/3D/"/>
    
    <category term="ArcGIS Earth" scheme="https://kikitamap.com/tags/ArcGIS-Earth/"/>
    
    <category term="BBC" scheme="https://kikitamap.com/tags/BBC/"/>
    
    <category term="Tutorials" scheme="https://kikitamap.com/tags/Tutorials/"/>
    
    <category term="Jump start" scheme="https://kikitamap.com/tags/Jump-start/"/>
    
    <category term="Bookmark" scheme="https://kikitamap.com/tags/Bookmark/"/>
    
    <category term="Terrain" scheme="https://kikitamap.com/tags/Terrain/"/>
    
    <category term="Basemap" scheme="https://kikitamap.com/tags/Basemap/"/>
    
  </entry>
  
  <entry>
    <title>Exploring the Footprints of BBC Documentaries in ArcGIS Earth</title>
    <link href="https://kikitamap.com/2024/12/25/BBC-Volcanos-1-en/"/>
    <id>https://kikitamap.com/2024/12/25/BBC-Volcanos-1-en/</id>
    <published>2024-12-25T08:10:11.000Z</published>
    <updated>2024-12-27T09:02:39.523Z</updated>
    
    <content type="html"><![CDATA[<p>The BBC’s documentaries are almost all masterpieces, and of course, I am an avid fan—especially of the Planet series. The wallpaper-grade visuals and the narration full of memorable quotes bring brilliance to days spent indoors. </p><p>In early 2021, the BBC released <em>A Perfect Planet</em>, a documentary that took four years to produce. Filmed across six continents and 31 countries, it spans four episodes, illustrating the wondrous forces shaping Earth—volcanoes, the sun, weather, and the ocean—while maintaining its delicate balance. The final segment examines humanity’s impact on our planet.</p><p>My child was particularly curious, repeatedly asking me where these filming locations were. That’s also the question I wanted to explore, so I decided to dive deeper. This article focuses on the filming locations featured in the first episode, <em>Volcanoes</em>, exploring the terrains and landscapes together. If you have a projector and a blank wall at home, the immersive effect is even better.</p><p>Across Earth’s surface, there are more than 1,500 active volcanoes. Without volcanoes, Earth wouldn’t have oceans, land, an atmosphere, or even life itself.</p><h2 id="01-Kilauea-Volcano"><a href="#01-Kilauea-Volcano" class="headerlink" title="01 Kilauea Volcano"></a>01 Kilauea Volcano</h2><p>Accompanied by the spectacular eruption footage and Sir David Attenborough’s familiar voice, the journey begins with <strong>Kilauea Volcano</strong> in Hawaii, one of the most active and massive volcanoes in the world.</p><p>Finding this volcano’s location is simple, but if you want to view it from a “God’s eye view” or a “drone perspective,” <strong>ArcGIS Earth</strong> is an excellent choice. It’s free to download, beginner-friendly, and even suitable for kids.</p><p>ArcGIS Earth provides high-resolution global basemaps and includes global elevation services to support realistic terrain visualization. Its GeoSearch feature allows you to type in a location name and fly directly to the recommended spot. By adjusting terrain exaggeration, you can enhance the contrast of terrain undulations to closely study the shape of the crater.</p><p>When my child asked where the volcano is, exploring the 3D map made it easier to explain terms like Hawaii, Pacific Ocean, archipelago, southeastern region, and crater. Switching between basemaps offers diverse views of the terrain.</p><p><img data-src="/images/blogImg/Volcano_1_Kilauea_1.png"><br><img data-src="/images/blogImg/Volcano_1_Kilauea_2.png"></p><h2 id="02-Ol-Doinyo-Lengai"><a href="#02-Ol-Doinyo-Lengai" class="headerlink" title="02 Ol Doinyo Lengai"></a>02 Ol Doinyo Lengai</h2><p><strong>Ol Doinyo Lengai</strong> (Tanzania) is situated in northern Tanzania within the East African Rift. It is one of Africa’s most active volcanoes. To its north lies the highly alkaline <strong>Lake Natron</strong>, a haven for flamingos, providing a natural sanctuary for their chicks.</p><p>The volcano’s crater and surface patterns are distinctly visible on a 3D map. To the north, you can locate Lake Natron. By inserting a screen overlay, the map becomes more vivid and engaging.</p><p><img data-src="/images/blogImg/Volcano_1_LakeNatron_F1.png"></p><p>Flamingos begin nesting and laying eggs when the lake dries up, as the surrounding salt flats form a natural protective moat for the nursery. Satellite imagery, captured at different times, sometimes shows the lake full and other times dry. With a bit of luck, zooming in on the map might reveal the pink and red riverbeds.</p><p><img data-src="/images/blogImg/Volcano_1_LakeNatron_F2.png"></p><p>I downloaded an image from NASA’s website and inserted it as a <strong>Ground Overlay</strong> in ArcGIS Earth. After a bit of dragging and adjusting, voilà!</p><p><img data-src="/images/blogImg/Volcano_1_LakeNatron_F3.png"><br><img data-src="/images/blogImg/Volcano_1_LakeNatron_F4.png"></p><h2 id="03-Galapagos-Islands"><a href="#03-Galapagos-Islands" class="headerlink" title="03 Galapagos Islands"></a>03 Galapagos Islands</h2><p>The <strong>Galapagos Islands</strong>, located in the eastern Pacific Ocean, were entirely formed by undersea volcanic eruptions.</p><p><img data-src="/images/blogImg/Volcano_1_Galapagos_1.png"><br><img data-src="/images/blogImg/Volcano_1_Galapagos_2.png"></p><p><strong>Fernandina Island</strong> is the youngest in the archipelago and is still growing. The heat from its massive crater attracts land iguanas, which cross rugged terrains to lay and incubate their eggs.</p><p><img data-src="/images/blogImg/Volcano_1_Galapagos_3.png"></p><p><strong>Download ArcGIS Earth:</strong><br><span class="exturl" data-url="aHR0cHM6Ly93d3cuZXNyaS5jb20vZW4tdXMvYXJjZ2lzL3Byb2R1Y3RzL2FyY2dpcy1lYXJ0aC9kb3dubG9hZHM=">https://www.esri.com/en-us/arcgis/products/arcgis-earth/downloads<i class="fa fa-external-link-alt"></i></span></p><p><strong>References</strong></p><ul><li>BBC: <span class="exturl" data-url="aHR0cDovL3d3dy5iYmNlYXJ0aC5jb20vc2hvd3MvYS1wZXJmZWN0LXBsYW5ldA==">www.bbcearth.com/shows/a-perfect-planet<i class="fa fa-external-link-alt"></i></span></li><li>Tencent Video: v.qq.com&#x2F;x&#x2F;cover&#x2F;mzc00200mmwc0xg&#x2F;n0035bhlkmn.html</li><li>NASA: earthobservatory.nasa.gov&#x2F;images&#x2F;90191&#x2F;lake-natron-tanzania</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;The BBC’s documentaries are almost all masterpieces, and of course, I am an avid fan—especially of the Planet series. The wallpaper-grade visuals and the narration full of memorable quotes bring brilliance to days spent indoors. &lt;/p&gt;
&lt;p&gt;In early 2021, the BBC released &lt;em&gt;A Perfect Planet&lt;/em&gt;, a documentary that took four years to produce. Filmed across six continents and 31 countries, it spans four episodes, illustrating the wondrous forces shaping Earth—volcanoes, the sun, weather, and the ocean—while maintaining its delicate balance. The final segment examines humanity’s impact on our planet.&lt;/p&gt;
&lt;p&gt;My child was particularly curious, repeatedly asking me where these filming locations were. That’s also the question I wanted to explore, so I decided to dive deeper. This article focuses on the filming locations featured in the first episode, &lt;em&gt;Volcanoes&lt;/em&gt;, exploring the terrains and landscapes together. If you have a projector and a blank wall at home, the immersive effect is even better.&lt;/p&gt;
&lt;p&gt;Across Earth’s surface, there are more than 1,500 active volcanoes. Without volcanoes, Earth wouldn’t have oceans, land, an atmosphere, or even life itself.&lt;/p&gt;
&lt;h2 id=&quot;01-Kilauea-Volcano&quot;&gt;&lt;a href=&quot;#01-Kilauea-Volcano&quot; class=&quot;headerlink&quot; title=&quot;01 Kilauea Volcano&quot;&gt;&lt;/a&gt;01 Kilauea Volcano&lt;/h2&gt;&lt;p&gt;Accompanied by the spectacular eruption footage and Sir David Attenborough’s familiar voice, the journey begins with &lt;strong&gt;Kilauea Volcano&lt;/strong&gt; in Hawaii, one of the most active and massive volcanoes in the world.&lt;/p&gt;
&lt;p&gt;Finding this volcano’s location is simple, but if you want to view it from a “God’s eye view” or a “drone perspective,” &lt;strong&gt;ArcGIS Earth&lt;/strong&gt; is an excellent choice. It’s free to download, beginner-friendly, and even suitable for kids.&lt;/p&gt;
&lt;p&gt;ArcGIS Earth provides high-resolution global basemaps and includes global elevation services to support realistic terrain visualization. Its GeoSearch feature allows you to type in a location name and fly directly to the recommended spot. By adjusting terrain exaggeration, you can enhance the contrast of terrain undulations to closely study the shape of the crater.&lt;/p&gt;
&lt;p&gt;When my child asked where the volcano is, exploring the 3D map made it easier to explain terms like Hawaii, Pacific Ocean, archipelago, southeastern region, and crater. Switching between basemaps offers diverse views of the terrain.&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;/images/blogImg/Volcano_1_Kilauea_1.png&quot;&gt;&lt;br&gt;&lt;img data-src=&quot;/images/blogImg/Volcano_1_Kilauea_2.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Tech Notes" scheme="https://kikitamap.com/categories/Tech-Notes/"/>
    
    
    <category term="3D" scheme="https://kikitamap.com/tags/3D/"/>
    
    <category term="ArcGIS Earth" scheme="https://kikitamap.com/tags/ArcGIS-Earth/"/>
    
    <category term="BBC" scheme="https://kikitamap.com/tags/BBC/"/>
    
    <category term="Tutorials" scheme="https://kikitamap.com/tags/Tutorials/"/>
    
    <category term="Jump start" scheme="https://kikitamap.com/tags/Jump-start/"/>
    
  </entry>
  
  <entry>
    <title>在ArcGIS Earth中寻找BBC纪录片的足迹</title>
    <link href="https://kikitamap.com/2024/12/25/BBC-Volcanos-1/"/>
    <id>https://kikitamap.com/2024/12/25/BBC-Volcanos-1/</id>
    <published>2024-12-25T08:10:11.000Z</published>
    <updated>2024-12-27T09:03:14.691Z</updated>
    
    <content type="html"><![CDATA[<p>BBC的纪录片几乎每部都堪称神作，我当然也是资深忠粉之一，尤其大爱星球系列。壁纸级的画面和金句频出的旁白，是足不出户的日子里的万丈光芒。<br>2021年初BBC推出的《完美星球&#x2F;Perfect Planet》，历时4年制作，拍摄地遍布六大洲31个国家，分四集讲述了在地球上自然造物的神奇力量，火山，太阳，气候，海洋无可替代地创造和维护着地球这颗完美星球的独特微妙的平衡；以及最后一部分，人类自身对地球的影响。</p><p>小朋友非常感兴趣，不断地问我这些摄影的地点在哪里？这也是我想知道的答案，那我就来做个扩展阅读。<br>这篇分享下第一集《火山》中出现的摄影地点，云端共赏地形地貌。如果家中有投影仪和一整面墙，那沉浸效果更佳。</p><p>地球表面上，现有超过 1500 座活火山。没有火山，地球上就不会产生海洋、陆地、大气，乃至生命。</p><h2 id="01-基拉韦厄火山-Kilauea-Volcano"><a href="#01-基拉韦厄火山-Kilauea-Volcano" class="headerlink" title="01 基拉韦厄火山&#x2F;Kilauea Volcano"></a>01 基拉韦厄火山&#x2F;Kilauea Volcano</h2><p>跟随着火山喷发的壮观画面和 大卫·爱登堡 熟悉的声音，首先看到的是 <strong>基拉韦厄火山</strong>（Kilauea volcano, Hawaii），一座位于夏威夷的非常活跃的巨大活火山。</p><p>想找到这座火山的位置本身不难，如果想从“上帝视角”和“无人机视角”去看这座火山，那 <strong>ArcGIS Earth</strong> 是个不错的选择。免费下载使用，新手友好，小朋友可用。</p><p>ArcGIS Earth 提供了全球高清影像底图&#x2F;basemap，并包含全球高程服务，支持真实地形的展示。也提供了位置搜索&#x2F;GeoSearch，输入地名即带你飞到推荐的位置。设置地形夸张，增强地形起伏对比，可以仔细了解火山口的形态。</p><p>小朋友问我火山在哪里？ 这样3D地图看一遍，夏威夷，太平洋，群岛，东南部，火山口…… 这些名词就不难解释了。更换不同的底图对比观察地形。</p><p><img data-src="/images/blogImg/Volcano_1_Kilauea_1.png"><br><img data-src="/images/blogImg/Volcano_1_Kilauea_2.png"></p><h2 id="02-伦盖伊火山-Ol-Doinyo-Lengai"><a href="#02-伦盖伊火山-Ol-Doinyo-Lengai" class="headerlink" title="02 伦盖伊火山&#x2F;Ol Doinyo Lengai"></a>02 伦盖伊火山&#x2F;Ol Doinyo Lengai</h2><p><strong>伦盖伊火山</strong> (Ol Doinyo Lengai,Tanzania ) 位于坦桑尼亚北部，属于东非大裂谷火山，是非洲最活跃的火山之一。它的北侧是高腐蚀性的<strong>纳特龙湖</strong> (Lake Natron)，这里是火烈鸟的天堂，为雏鸟们提供了天然的庇护所。</p><p>火山口和地表脉络在3D地图上清晰可见，往北可以找到纳特龙湖。插入 Screen Overlay, 让地图更漂亮更有故事感。</p><p><img data-src="/images/blogImg/Volcano_1_LakeNatron_F1.png"></p><p>火烈鸟在湖水干涸时，才开始筑巢产卵抚育幼鸟，这样周围的盐沼会成为托儿所的天然护城河。卫星影像是在不同时期采集的，有时湖水丰盈，有时适逢干涸，在缩放地图的时候，运气好就可以刚好看到红红粉粉的河床。</p><p><img data-src="/images/blogImg/Volcano_1_LakeNatron_F2.png"></p><p>从 NASA 网页下载了一张图，在 ArcGIS Earth 中插入 <strong>Ground Overlay</strong>，拖拖拽拽就这样。</p><p><img data-src="/images/blogImg/Volcano_1_LakeNatron_F3.png"><br><img data-src="/images/blogImg/Volcano_1_LakeNatron_F4.png"></p><h2 id="03-加拉帕戈斯群岛-Galapagos-Islands"><a href="#03-加拉帕戈斯群岛-Galapagos-Islands" class="headerlink" title="03 加拉帕戈斯群岛&#x2F;Galapagos Islands"></a>03 加拉帕戈斯群岛&#x2F;Galapagos Islands</h2><p><strong>加拉帕戈斯群岛</strong>(Galapagos Islands)  位于太平洋东部，完全是由海底火山喷发形成的。</p><p><img data-src="/images/blogImg/Volcano_1_Galapagos_1.png"><br><img data-src="/images/blogImg/Volcano_1_Galapagos_2.png"></p><p><strong>费尔南迪娜岛</strong>(Isla Fernandina) 是其中最年轻的，目前仍在增长。巨大的火山口的热量吸引着陆地鬣蜥翻山越岭，披荆斩棘，前来产卵孵化。</p><p><img data-src="/images/blogImg/Volcano_1_Galapagos_3.png"></p><p><strong>下载 ArcGIS Earth：</strong><br><span class="exturl" data-url="aHR0cHM6Ly93d3cuZXNyaS5jb20vZW4tdXMvYXJjZ2lzL3Byb2R1Y3RzL2FyY2dpcy1lYXJ0aC9kb3dubG9hZHM=">https://www.esri.com/en-us/arcgis/products/arcgis-earth/downloads<i class="fa fa-external-link-alt"></i></span></p><p><strong>参考</strong></p><ul><li>BBC: <span class="exturl" data-url="aHR0cDovL3d3dy5iYmNlYXJ0aC5jb20vc2hvd3MvYS1wZXJmZWN0LXBsYW5ldA==">www.bbcearth.com/shows/a-perfect-planet<i class="fa fa-external-link-alt"></i></span></li><li>腾讯视频: v.qq.com&#x2F;x&#x2F;cover&#x2F;mzc00200mmwc0xg&#x2F;n0035bhlkmn.html</li><li>NASA: earthobservatory.nasa.gov&#x2F;images&#x2F;90191&#x2F;lake-natron-tanzania</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;BBC的纪录片几乎每部都堪称神作，我当然也是资深忠粉之一，尤其大爱星球系列。壁纸级的画面和金句频出的旁白，是足不出户的日子里的万丈光芒。&lt;br&gt;2021年初BBC推出的《完美星球&amp;#x2F;Perfect Planet》，历时4年制作，拍摄地遍布六大洲31个国家，分四集讲述了在地球上自然造物的神奇力量，火山，太阳，气候，海洋无可替代地创造和维护着地球这颗完美星球的独特微妙的平衡；以及最后一部分，人类自身对地球的影响。&lt;/p&gt;
&lt;p&gt;小朋友非常感兴趣，不断地问我这些摄影的地点在哪里？这也是我想知道的答案，那我就来做个扩展阅读。&lt;br&gt;这篇分享下第一集《火山》中出现的摄影地点，云端共赏地形地貌。如果家中有投影仪和一整面墙，那沉浸效果更佳。&lt;/p&gt;
&lt;p&gt;地球表面上，现有超过 1500 座活火山。没有火山，地球上就不会产生海洋、陆地、大气，乃至生命。&lt;/p&gt;
&lt;h2 id=&quot;01-基拉韦厄火山-Kilauea-Volcano&quot;&gt;&lt;a href=&quot;#01-基拉韦厄火山-Kilauea-Volcano&quot; class=&quot;headerlink&quot; title=&quot;01 基拉韦厄火山&amp;#x2F;Kilauea Volcano&quot;&gt;&lt;/a&gt;01 基拉韦厄火山&amp;#x2F;Kilauea Volcano&lt;/h2&gt;&lt;p&gt;跟随着火山喷发的壮观画面和 大卫·爱登堡 熟悉的声音，首先看到的是 &lt;strong&gt;基拉韦厄火山&lt;/strong&gt;（Kilauea volcano, Hawaii），一座位于夏威夷的非常活跃的巨大活火山。&lt;/p&gt;
&lt;p&gt;想找到这座火山的位置本身不难，如果想从“上帝视角”和“无人机视角”去看这座火山，那 &lt;strong&gt;ArcGIS Earth&lt;/strong&gt; 是个不错的选择。免费下载使用，新手友好，小朋友可用。&lt;/p&gt;
&lt;p&gt;ArcGIS Earth 提供了全球高清影像底图&amp;#x2F;basemap，并包含全球高程服务，支持真实地形的展示。也提供了位置搜索&amp;#x2F;GeoSearch，输入地名即带你飞到推荐的位置。设置地形夸张，增强地形起伏对比，可以仔细了解火山口的形态。&lt;/p&gt;
&lt;p&gt;小朋友问我火山在哪里？ 这样3D地图看一遍，夏威夷，太平洋，群岛，东南部，火山口…… 这些名词就不难解释了。更换不同的底图对比观察地形。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;/images/blogImg/Volcano_1_Kilauea_1.png&quot;&gt;&lt;br&gt;&lt;img data-src=&quot;/images/blogImg/Volcano_1_Kilauea_2.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;02-伦盖伊火山-Ol-Doinyo-Lengai&quot;&gt;&lt;a href=&quot;#02-伦盖伊火山-Ol-Doinyo-Lengai&quot; class=&quot;headerlink&quot; title=&quot;02 伦盖伊火山&amp;#x2F;Ol Doinyo Lengai&quot;&gt;&lt;/a&gt;02 伦盖伊火山&amp;#x2F;Ol Doinyo Lengai&lt;/h2&gt;</summary>
    
    
    
    <category term="Tech Notes" scheme="https://kikitamap.com/categories/Tech-Notes/"/>
    
    
    <category term="3D" scheme="https://kikitamap.com/tags/3D/"/>
    
    <category term="ArcGIS Earth" scheme="https://kikitamap.com/tags/ArcGIS-Earth/"/>
    
    <category term="BBC" scheme="https://kikitamap.com/tags/BBC/"/>
    
    <category term="Tutorials" scheme="https://kikitamap.com/tags/Tutorials/"/>
    
    <category term="Jump start" scheme="https://kikitamap.com/tags/Jump-start/"/>
    
  </entry>
  
  <entry>
    <title>Ending 2024</title>
    <link href="https://kikitamap.com/2024/12/23/Ending2024/"/>
    <id>https://kikitamap.com/2024/12/23/Ending2024/</id>
    <published>2024-12-23T08:09:36.000Z</published>
    <updated>2024-12-27T09:53:35.233Z</updated>
    
    <content type="html"><![CDATA[<p>重拾下写作，网站换个新衣服，洗尘迎接2025。</p><p>Change log：</p><ol><li>Theme –&gt; NexT</li><li>评论系统 –&gt; Disqus</li><li>SEO优化</li><li>DNS+SSL优化</li><li>Sitemap优化</li><li>RSS优化</li><li>Categories,Tags优化</li><li>图片地址优化</li><li>I18N支持 –&gt; 支持 <a href="http://kikitamap.com/en/">http://kikitamap.com/en/</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;重拾下写作，网站换个新衣服，洗尘迎接2025。&lt;/p&gt;
&lt;p&gt;Change log：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Theme –&amp;gt; NexT&lt;/li&gt;
&lt;li&gt;评论系统 –&amp;gt; Disqus&lt;/li&gt;
&lt;li&gt;SEO优化&lt;/li&gt;
&lt;li&gt;DNS+SSL优化&lt;/li</summary>
      
    
    
    
    <category term="Inner Thoughts" scheme="https://kikitamap.com/categories/Inner-Thoughts/"/>
    
    
  </entry>
  
  <entry>
    <title>HERE Data Hub CLI</title>
    <link href="https://kikitamap.com/2020/08/24/HDataHubCLI/"/>
    <id>https://kikitamap.com/2020/08/24/HDataHubCLI/</id>
    <published>2020-08-24T12:03:24.000Z</published>
    <updated>2024-12-24T03:31:31.533Z</updated>
    
    <content type="html"><![CDATA[<p>HERE Data Hub 是一个用于空间数据存储的云服务，能够使用户简便地访问、管理空间数据。上一篇 HERE Studio 就是构建在 Data Hub 之上的网页应用程序。</p><p>Data Hub CLI （Command Line Interface）是基于 Node.js 的命令行接口，可以帮助用户进行一些数据管理方面的交互操作。</p><br><h2 id="1-如何安装-？"><a href="#1-如何安装-？" class="headerlink" title="1 如何安装 ？"></a>1 如何安装 ？</h2><h3 id="1-1-安装-Node-js-和-npm"><a href="#1-1-安装-Node-js-和-npm" class="headerlink" title="1.1 安装 Node.js 和 npm"></a>1.1 安装 Node.js 和 npm</h3><blockquote><p>安装方式很多种，我直接搬运了 <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3Mv">Hexo 官网<i class="fa fa-external-link-alt"></i></span> 的安装指引。当年搭我这个博客时参考过，简洁好用，五星推荐：</p><p>Node.js 为大多数平台提供了官方的 <span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2FkLw==">安装程序<i class="fa fa-external-link-alt"></i></span>。<br>对于中国大陆地区用户，可以前往 <span class="exturl" data-url="aHR0cHM6Ly9ucG0udGFvYmFvLm9yZy9taXJyb3JzL25vZGU=">淘宝 Node.js 镜像<i class="fa fa-external-link-alt"></i></span> 下载。</p><p>其它的安装方法：</p><ul><li>Windows：通过 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2phc29uZ2luL252cy8=">nvs<i class="fa fa-external-link-alt"></i></span>（推荐）或者<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL252bS1zaC9udm0=">nvm<i class="fa fa-external-link-alt"></i></span> 安装。</li><li>Mac：使用 <span class="exturl" data-url="aHR0cHM6Ly9icmV3LnNoLw==">Homebrew<i class="fa fa-external-link-alt"></i></span> 或 <span class="exturl" data-url="aHR0cDovL3d3dy5tYWNwb3J0cy5vcmcv">MacPorts<i class="fa fa-external-link-alt"></i></span> 安装。</li><li>Linux（DEB&#x2F;RPM-based）：从 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25vZGVzb3VyY2UvZGlzdHJpYnV0aW9ucw==">NodeSource<i class="fa fa-external-link-alt"></i></span> 安装。</li><li>其它：使用相应的软件包管理器进行安装，可以参考由 Node.js 提供的 <span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2FkL3BhY2thZ2UtbWFuYWdlci8=">指导<i class="fa fa-external-link-alt"></i></span></li></ul><p>对于 Mac 和 Linux 同样建议使用 nvs 或者 nvm，以避免可能会出现的权限问题。</p></blockquote><p>验证 Node.js 安装成功。  命令 <code>node -v</code>； <code>npm -v</code> ，看到当前版本号即可：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\xiamu&gt;node <span class="literal">-v</span></span><br><span class="line">v10.<span class="number">16.3</span></span><br><span class="line"></span><br><span class="line">C:\Users\xiamu&gt;npm <span class="literal">-v</span></span><br><span class="line"><span class="number">6.9</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="1-2-安装-Data-Hub-CLI"><a href="#1-2-安装-Data-Hub-CLI" class="headerlink" title="1.2 安装 Data Hub CLI"></a>1.2 安装 Data Hub CLI</h3><p>使用如下命令完成 Data Hub CLI 安装。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install <span class="literal">-g</span> @here/<span class="built_in">cli</span></span><br></pre></td></tr></table></figure><p>提示：全局安装在某些环境下，需要管理员权限。</p><p>验证 Data Hub CLI 安装成功，  输入命令 <code>here -V</code> :</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;here <span class="literal">-V</span></span><br><span class="line"><span class="number">1.5</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure><br><h2 id="2-连接-HERE-账号"><a href="#2-连接-HERE-账号" class="headerlink" title="2 连接 HERE 账号"></a>2 连接 HERE 账号</h2><p>安装部署成功后，连接 HERE Developer 账号，从而管理自己账号下的项目和数据集。使用命令 <code>here configure account</code>：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;here configure account</span><br><span class="line">prompt: Email:  sharon.mu@here.com</span><br><span class="line">prompt: Password:</span><br><span class="line">Secrets verified successfully</span><br><span class="line"><span class="built_in">Add-on</span> features enabled.</span><br><span class="line">Default App Selected - oyNWTbKIov6XPMlrXxCH</span><br></pre></td></tr></table></figure><p>连接成功后，你的账号配置信息会加密存储在当前系统账户目录下，文件名为：**.herecli** 。</p><p>命令 <code>here configure verify</code> 来验证当前 credentials 是否有权限使用 Data Hub APIs。</p><br><h2 id="3-常用命令"><a href="#3-常用命令" class="headerlink" title="3 常用命令"></a>3 常用命令</h2><p>Data Hub CLI 的命令都遵循如下格式：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;HERE command&gt; &lt;API command&gt;</span><br></pre></td></tr></table></figure><p>常用命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;here <span class="literal">-h</span></span><br><span class="line">Usage: here [<span class="type">options</span>] [<span class="type">command</span>]</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  <span class="literal">-V</span>, <span class="literal">--version</span>                           output the version number</span><br><span class="line">  <span class="literal">-h</span>, <span class="literal">--help</span>                              display help <span class="keyword">for</span> command</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">  configure|c [<span class="type">verify</span>|<span class="type">refresh</span>]            setup configuration <span class="keyword">for</span> authentication</span><br><span class="line">  xyz|xs [<span class="type">list</span>|<span class="type">create</span>|<span class="type">upload</span>]             work with <span class="keyword">Data</span> Hub spaces</span><br><span class="line">  studio [<span class="type">list</span>|<span class="type">delete</span>|<span class="type">show</span>]               work with HERE Studio projects</span><br><span class="line">  transform|tf [<span class="type">csv2geo</span>|<span class="type">shp2geo</span>|<span class="type">gpx2geo</span>]  convert from csv/shapefile/gpx to geojson</span><br><span class="line">  geocode|<span class="built_in">gc</span>                              geocode feature</span><br><span class="line">  help [<span class="type">command</span>]                          display help <span class="keyword">for</span> command</span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><ul><li><p>List All Spaces – <code>here xyz list</code></p><p><img data-src="/images/blogImg/HDataHubCLI_list.jpg"></p></li><li><p>Create a New Space</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">here xyz create <span class="literal">-t</span> <span class="string">&quot;title for space&quot;</span> <span class="literal">-d</span> <span class="string">&quot;description for space&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>Upload Data to a Space， Geojson&#x2F;CSV&#x2F;Shapefile……</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">here xyz upload YOUR_SPACE_ID <span class="operator">-f</span> /Users/xyz/data.geojson</span><br></pre></td></tr></table></figure></li></ul><p>更多命令示例，详见文档： <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vZG9jdW1lbnRhdGlvbi9zdHVkaW8vbWFwX2N1c3RvbWl6YXRpb25fc3VpdGVfY2xpX2hscC9kZXZfZ3VpZGUvdG9waWNzL2NvbW1hbmRzLmh0bWw=">HERE Studio and HERE Data Hub  -  Commands<i class="fa fa-external-link-alt"></i></span></p><br><h2 id="4-Source-Code-on-Github"><a href="#4-Source-Code-on-Github" class="headerlink" title="4 Source Code on Github"></a>4 Source Code on Github</h2><p>Data Hub CLI 是 HERE 官方提供的跨平台的开源库，如果感兴趣可以扩展定制的其功能。</p><p><strong>heremaps&#x2F;here-cli</strong>  <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hlcmVtYXBzL2hlcmUtY2xp">https://github.com/heremaps/here-cli<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;HERE Data Hub 是一个用于空间数据存储的云服务，能够使用户简便地访问、管理空间数据。上一篇 HERE Studio 就是构建在 Data Hub 之上的网页应用程序。&lt;/p&gt;
&lt;p&gt;Data Hub CLI （Command Line Interface）是基于 Node.js 的命令行接口，可以帮助用户进行一些数据管理方面的交互操作。&lt;/p&gt;
&lt;br&gt;

&lt;h2 id=&quot;1-如何安装-？&quot;&gt;&lt;a href=&quot;#1-如何安装-？&quot; class=&quot;headerlink&quot; title=&quot;1 如何安装 ？&quot;&gt;&lt;/a&gt;1 如何安装 ？&lt;/h2&gt;&lt;h3 id=&quot;1-1-安装-Node-js-和-npm&quot;&gt;&lt;a href=&quot;#1-1-安装-Node-js-和-npm&quot; class=&quot;headerlink&quot; title=&quot;1.1 安装 Node.js 和 npm&quot;&gt;&lt;/a&gt;1.1 安装 Node.js 和 npm&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;安装方式很多种，我直接搬运了 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3Mv&quot;&gt;Hexo 官网&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt; 的安装指引。当年搭我这个博客时参考过，简洁好用，五星推荐：&lt;/p&gt;
&lt;p&gt;Node.js 为大多数平台提供了官方的 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2FkLw==&quot;&gt;安装程序&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;。&lt;br&gt;对于中国大陆地区用户，可以前往 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9ucG0udGFvYmFvLm9yZy9taXJyb3JzL25vZGU=&quot;&gt;淘宝 Node.js 镜像&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt; 下载。&lt;/p&gt;
&lt;p&gt;其它的安装方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows：通过 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9naXRodWIuY29tL2phc29uZ2luL252cy8=&quot;&gt;nvs&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;（推荐）或者&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9naXRodWIuY29tL252bS1zaC9udm0=&quot;&gt;nvm&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt; 安装。&lt;/li&gt;
&lt;li&gt;Mac：使用 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9icmV3LnNoLw==&quot;&gt;Homebrew&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt; 或 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cDovL3d3dy5tYWNwb3J0cy5vcmcv&quot;&gt;MacPorts&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt; 安装。&lt;/li&gt;
&lt;li&gt;Linux（DEB&amp;#x2F;RPM-based）：从 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9naXRodWIuY29tL25vZGVzb3VyY2UvZGlzdHJpYnV0aW9ucw==&quot;&gt;NodeSource&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt; 安装。&lt;/li&gt;
&lt;li&gt;其它：使用相应的软件包管理器进行安装，可以参考由 Node.js 提供的 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9ub2RlanMub3JnL2VuL2Rvd25sb2FkL3BhY2thZ2UtbWFuYWdlci8=&quot;&gt;指导&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于 Mac 和 Linux 同样建议使用 nvs 或者 nvm，以避免可能会出现的权限问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;验证 Node.js 安装成功。  命令 &lt;code&gt;node -v&lt;/code&gt;； &lt;code&gt;npm -v&lt;/code&gt; ，看到当前版本号即可：&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;C:&#92;Users&#92;xiamu&amp;gt;node &lt;span class=&quot;literal&quot;&gt;-v&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v10.&lt;span class=&quot;number&quot;&gt;16.3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C:&#92;Users&#92;xiamu&amp;gt;npm &lt;span class=&quot;literal&quot;&gt;-v&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;6.9&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&quot;1-2-安装-Data-Hub-CLI&quot;&gt;&lt;a href=&quot;#1-2-安装-Data-Hub-CLI&quot; class=&quot;headerlink&quot; title=&quot;1.2 安装 Data Hub CLI&quot;&gt;&lt;/a&gt;1.2 安装 Data Hub CLI&lt;/h3&gt;&lt;p&gt;使用如下命令完成 Data Hub CLI 安装。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech Notes" scheme="https://kikitamap.com/categories/Tech-Notes/"/>
    
    
    <category term="Mapping" scheme="https://kikitamap.com/tags/Mapping/"/>
    
    <category term="HERE Platform" scheme="https://kikitamap.com/tags/HERE-Platform/"/>
    
    <category term="HERE Data Hub" scheme="https://kikitamap.com/tags/HERE-Data-Hub/"/>
    
    <category term="Data Management" scheme="https://kikitamap.com/tags/Data-Management/"/>
    
  </entry>
  
  <entry>
    <title>玩一玩 HERE Studio</title>
    <link href="https://kikitamap.com/2020/08/23/HStudio-intro/"/>
    <id>https://kikitamap.com/2020/08/23/HStudio-intro/</id>
    <published>2020-08-23T15:41:29.000Z</published>
    <updated>2024-12-24T03:31:31.532Z</updated>
    
    <content type="html"><![CDATA[<p>可能国内并没有太多人知道， HERE 也有一款轻量级的地图在线应用程序 ，可以帮助用户管理自己的数据，快速配置出一幅看起来还不错的在线地图， 它叫 **<span class="exturl" data-url="aHR0cHM6Ly9zdHVkaW8uaGVyZS5jb20v">HERE Studio<i class="fa fa-external-link-alt"></i></span>**。</p><p>HERE Studio 提供了平台上的在线地图服务作为底图，并提供了常用的基础地图配置工具和样式，即使不愿意写代码，也可以配置出漂亮的地图； 当然，如果有更深入或批处理的数据管理和渲染需求，也可以使用 HERE Data Hub CLI 命令行或 RESTful API，Javascript API，因为 HERE Studio 本身就是基于 HERE Data Hub 的一个轻量级网页端应用。 </p><br><h3 id="如何获取-HERE-Studio-？"><a href="#如何获取-HERE-Studio-？" class="headerlink" title="如何获取 HERE Studio ？"></a>如何获取 HERE Studio ？</h3><p>首先，注册（Sign Up）或登录（Log In）HERE Developer 官网： <a href="https://developer.here.com/"><em><strong>developer.here.com</strong></em></a> ；</p><p>然后，创建 Project： <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vcHJvamVjdHM=">***developer.here.com&#x2F;projects ***<i class="fa fa-external-link-alt"></i></span> ；</p><p>这样个人 developer 默认就可以获得一系列的产品的试用 key， 例如 JS API， REST API， SDK 等。 当然，免费流量是有限制的，但对于个人developer了解功能做测试可以啦。</p><p>除了这些 key，免费账号中还有一个很低调的描述，以至于很多用户得了宝藏，还不知道是什么：</p><blockquote><ul><li>Data transfer per month 2.5GB</li><li>Database storage per month 5GB</li></ul></blockquote><p>YES， 这说的就是 HERE Data Hub，  包括 HERE Studio。</p><p>截止到今天，HERE Studio 的最新版本为 1.8.0。</p><p>最后，用 HERE Develper 账号登入： <a href="https://studio.here.com/studio/"><em><strong>studio.here.com&#x2F;studio</strong></em></a> 。</p><br><h3 id="HERE-Studio-可以做什么？"><a href="#HERE-Studio-可以做什么？" class="headerlink" title="HERE Studio 可以做什么？"></a>HERE Studio 可以做什么？</h3><ul><li><p>HERE Studio 提供了很多友好的地图数据管理与可视化的工具，能使用户便利高效地完成地图工作；</p></li><li><p>HERE Studio 提供了很多可供用户交互操作的 UI 组件，设置精细地地图样式就变得很容易啦， so easy；</p></li><li><p>所有的地图数据基于HERE Server host 的云存储，实时交互；</p></li><li><p>商业化服务环境的REST&#x2F;JS API 和 命令行客户端工具 CLI可调用 HERE Studio 上传的数据。</p></li><li><p>一键分布和分享给你的朋友或读者。</p></li></ul><p><img data-src="/images/blogImg/HStudio_homepage.jpg"></p><p><img data-src="/images/blogImg/HStudio_basemap.jpg"></p><p><img data-src="/images/blogImg/HStudio_customization.jpg"></p><p><img data-src="/images/blogImg/HStudio_sharing.jpg"></p><br><h3 id="PS："><a href="#PS：" class="headerlink" title="PS："></a><em>PS：</em></h3><p>如果你从产品文档中，看到 HERE XYZ *** 等产品名称，请自动脑补映射到 HERE Data Hub &#x2F; HERE Studio  即可。傲娇的产品技术团队就是这么任性，觉得产品名称不能表达他们当下的思绪时，那就改个名字吧。 开个玩笑，XYZ 是这个产品的曾用名，文档通用，大家读起来吧。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;可能国内并没有太多人知道， HERE 也有一款轻量级的地图在线应用程序 ，可以帮助用户管理自己的数据，快速配置出一幅看起来还不错的在线地图， 它叫 **&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9zdHVkaW8uaGVyZS5jb20v&quot;&gt;HERE Studio&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;**。&lt;/p&gt;
&lt;p&gt;HERE Studio 提供了平台上的在线地图服务作为底图，并提供了常用的基础地图配置工具和样式，即使不愿意写代码，也可以配置出漂亮的地图； 当然，如果有更深入或批处理的数据管理和渲染需求，也可以使用 HERE Data Hub CLI 命令行或 RESTful API，Javascript API，因为 HERE Studio 本身就是基于 HERE Data Hub 的一个轻量级网页端应用。 &lt;/p&gt;
&lt;br&gt;

&lt;h3 id=&quot;如何获取-HERE-Studio-？&quot;&gt;&lt;a href=&quot;#如何获取-HERE-Studio-？&quot; class=&quot;headerlink&quot; title=&quot;如何获取 HERE Studio ？&quot;&gt;&lt;/a&gt;如何获取 HERE Studio ？&lt;/h3&gt;&lt;p&gt;首先，注册（Sign Up）或登录（Log In）HERE Developer 官网： &lt;a href=&quot;https://developer.here.com/&quot;&gt;&lt;em&gt;&lt;strong&gt;developer.here.com&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt; ；&lt;/p&gt;
&lt;p&gt;然后，创建 Project： &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vcHJvamVjdHM=&quot;&gt;***developer.here.com&amp;#x2F;projects ***&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt; ；&lt;/p&gt;
&lt;p&gt;这样个人 developer 默认就可以获得一系列的产品的试用 key， 例如 JS API， REST API， SDK 等。 当然，免费流量是有限制的，但对于个人developer了解功能做测试可以啦。&lt;/p&gt;
&lt;p&gt;除了这些 key，免费账号中还有一个很低调的描述，以至于很多用户得了宝藏，还不知道是什么：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Data transfer per month 2.5GB&lt;/li&gt;
&lt;li&gt;Database storage per month 5GB&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;YES， 这说的就是 HERE Data Hub，  包括 HERE Studio。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech Notes" scheme="https://kikitamap.com/categories/Tech-Notes/"/>
    
    
    <category term="Mapping" scheme="https://kikitamap.com/tags/Mapping/"/>
    
    <category term="HERE Platform" scheme="https://kikitamap.com/tags/HERE-Platform/"/>
    
    <category term="Visualization" scheme="https://kikitamap.com/tags/Visualization/"/>
    
  </entry>
  
  <entry>
    <title>特别的2020：一些特别的感想</title>
    <link href="https://kikitamap.com/2020/08/22/Thinkings2020/"/>
    <id>https://kikitamap.com/2020/08/22/Thinkings2020/</id>
    <published>2020-08-22T13:48:45.000Z</published>
    <updated>2024-12-24T03:31:31.531Z</updated>
    
    <content type="html"><![CDATA[<p>每过一段时间，对自己前一阶段工作和生活进行复盘，是很有必要的。目的很简单，总结既得经验，剖析问题原因，指导下个阶段更好地运行。</p><p>而更好的运行，才能给人带来持久的满足感和幸福感。</p><br><h3 id="定义自己的工作"><a href="#定义自己的工作" class="headerlink" title="定义自己的工作"></a><strong>定义自己的工作</strong></h3><p>对于大多数人，工作占了人生的相当大一部分时间。所以先要充分理解这份工作，以及它将对自己的影响。家人经常问我，你是做什么的？我总是回答做地图搞IT云云… 但是面对自己，当然清楚行业名称并不是自己工作的JD。</p><p>简而言之，我在做的是一份以地图技术为中心的不断解决各种问题的IT类工作。problem solver 曾是我认为的别人贴给我的最佳标签之一，毕竟这个世界里 problem maker 太多了。</p><br><h3 id="硬技能精进"><a href="#硬技能精进" class="headerlink" title="硬技能精进"></a><strong>硬技能精进</strong></h3><p><strong>Hard</strong> skill 方面，需要不断学习，拓展和精进产品技术。所有技术同学都懂，IT技术日新月异，一直学习都很难乘风破浪，何况随波逐流放弃治疗？任何一个”我知道”都不是信手拈来。</p><p>之前在esri的几年阅读英文技术文档的习惯对我有巨大的帮助，静心读文档解题总是会有助思路。前任和现任供职的这两家公司，有个共同特点，就是产品谱系庞大，产品名录远长于一般餐厅菜单，product manual 页数动辄几千，外加一个在线产品不断更新的developer portal。时间碎片，团队迷你，克服浮躁，学习速度和用户赛跑，都是重重挑战。</p><p>压力的边缘，心平气和地读完文档并研究解决实际问题，给我的是一种积极反馈。享受这个抽丝剥茧的过程，一旦上瘾也不好戒。技术工种必须保持学习，后面我会为自己分配的更多的学习时间来精进硬技能。摄入不够，输出就无力。</p><br><h3 id="软技能提升"><a href="#软技能提升" class="headerlink" title="软技能提升"></a><strong>软技能提升</strong></h3><p><strong>Soft</strong> skill 方面，是沟通和管理沟通。例如，常常需要同时至少面对3个客户企业，每个企业有2个人和我对接问题，那么外侧至少有6个人；几个问题并发，自己解决分析问题的同时，如有必要还要和不同国家不同技术团队沟通确认，内侧通常也会是同时几个人active；这是一个典型的 m:n relationship 多头沟通。</p><p>工作方式类似人肉版的 large-scale matrix routing 位置服务 ，我大概就是这些stakeholder们的沟通处理server，为每对匹配的Q&amp;A 双方建立最佳路径。既要向内侧说清楚当前客户诉求，又要把解决方案客观得体地反馈给外侧，兼顾沟通过程对双方的正向促进。</p><p>如上已经是理想情况，实际环境中毕竟是多方沟通，各有各的诉求，各有各的boundary和scope，如何能平衡和管理期待，取最大公约数，也是需要推敲的困难模式。论如何优雅地argue。正如，在很多个因子的统计归一化过程中，每一个因子都必要而不突出了；每个因子的最优不一定是整个算式的最优。大家好才是真的好。</p><p>这个部分需要我自己时常剖析问题，完善自己认知体系，勾画个人边界，锻炼实践能力。既然是所有问题和人的接口和处理器，外部环境不以自己的意志转移时，只有通过自我提升才能优化性能。沿用企业文化金句：be true.  be bold.  win together !</p><br><h3 id="平衡生活"><a href="#平衡生活" class="headerlink" title="平衡生活"></a><strong>平衡生活</strong></h3><p>疫情期间在家办公，无论主动被动，工作和生活搅在一起。遇到紧急状况，生活时间不得不被工作侵占，而这种侵占常常是无意识的。不知不觉错过吃饭休息时间，被家人催促和说教，而我又常常流露出不耐烦，差的脾气总是给了亲近的人。在孩子最淘气的 2,3岁都是父母在默默守护。我支持了所有别人，而家人默默地支持了我。仔细思考，这不是可持续的发展。好的状态是我们能自循环，而不是汲取与被汲取是不同方。所谓平衡生活，不是平衡自己的，是平衡一家人的。</p><p>厌恶标榜加班，尤其是自己在从事一份智力型工作。当出现模式化倾向，要思考陷入长期加班，是不是有什么系统性的问题？是不是模糊了某些边界和原则？是否还有合理改善的空间？如何能从本质上提高效率摆脱窘境？如果是，怎么做？如果否，现在怎么做？很多事情不是单纯延长工作时间本身能解决的。</p><p>能用智力解决的问题，不要只用体力；能用体力解决的问题，不要只用精力。越来越理解：成年人的世界没有容易二字。但是我和很多人有一样的执念，喜欢自己看起来游刃有余、举重若轻、深入浅出，而无需渲染背后的努力过程。</p><p><img data-src="/images/blogImg/Thinkings2020.jpeg"></p><p>人的一生是方方面面的。 如何做一个有趣的人？至少做一个不匮乏不枯燥的人？这是我人生探求的方向。人生各个维度的积极力量是可以相互影响的。</p><p>没有什么大不了，趁着还享受现在的大多数时刻，及时地优化系统，清除垃圾，或许又是新的篇章。虽然我们没有以前那么年轻了，但现在已经是这一生最年轻的时刻了，去日无多，笃定前行。</p><p>“生活不息，折腾不止”，不然不可能怎么可能发生。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;每过一段时间，对自己前一阶段工作和生活进行复盘，是很有必要的。目的很简单，总结既得经验，剖析问题原因，指导下个阶段更好地运行。&lt;/p&gt;
&lt;p&gt;而更好的运行，才能给人带来持久的满足感和幸福感。&lt;/p&gt;
&lt;br&gt;

&lt;h3 id=&quot;定义自己的工作&quot;&gt;&lt;a href=&quot;#定义自己的工作&quot; class=&quot;headerlink&quot; title=&quot;定义自己的工作&quot;&gt;&lt;/a&gt;&lt;strong&gt;定义自己的工作&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;对于大多数人，工作占了人生的相当大一部分时间。所以先要充分理解这份工作，以及它将对自己的影响。家人经常问我，你是做什么的？我总是回答做地图搞IT云云… 但是面对自己，当然清楚行业名称并不是自己工作的JD。&lt;/p&gt;
&lt;p&gt;简而言之，我在做的是一份以地图技术为中心的不断解决各种问题的IT类工作。problem solver 曾是我认为的别人贴给我的最佳标签之一，毕竟这个世界里 problem maker 太多了。&lt;/p&gt;
&lt;br&gt;

&lt;h3 id=&quot;硬技能精进&quot;&gt;&lt;a href=&quot;#硬技能精进&quot; class=&quot;headerlink&quot; title=&quot;硬技能精进&quot;&gt;&lt;/a&gt;&lt;strong&gt;硬技能精进&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Hard&lt;/strong&gt; skill 方面，需要不断学习，拓展和精进产品技术。所有技术同学都懂，IT技术日新月异，一直学习都很难乘风破浪，何况随波逐流放弃治疗？任何一个”我知道”都不是信手拈来。&lt;/p&gt;
&lt;p&gt;之前在esri的几年阅读英文技术文档的习惯对我有巨大的帮助，静心读文档解题总是会有助思路。前任和现任供职的这两家公司，有个共同特点，就是产品谱系庞大，产品名录远长于一般餐厅菜单，product manual 页数动辄几千，外加一个在线产品不断更新的developer portal。时间碎片，团队迷你，克服浮躁，学习速度和用户赛跑，都是重重挑战。&lt;/p&gt;</summary>
    
    
    
    <category term="Inner Thoughts" scheme="https://kikitamap.com/categories/Inner-Thoughts/"/>
    
    
  </entry>
  
  <entry>
    <title>夸父日记</title>
    <link href="https://kikitamap.com/2020/07/23/LifeAccordingtoDad/"/>
    <id>https://kikitamap.com/2020/07/23/LifeAccordingtoDad/</id>
    <published>2020-07-23T07:39:44.000Z</published>
    <updated>2024-12-30T07:44:31.731Z</updated>
    
    <content type="html"><![CDATA[<p>总是感觉父亲比我更有生活的智慧，他总能从平淡恬静的生活中发现乐趣、秩序和美好。无论是手作、烹饪、园艺… 生活的方方面面。</p><p>我和很多人一样，异地求学工作，之前的十几年都没有在家乡和父母一起长期生活；自己放飞了太久了，我心中对美好生活的刻板印象时常被父亲“讥讽”。</p><p>疫情这段特别的日子，给每个人的时间轴都烙上了特别的时间戳。而于我，是难得与家人腻在一起的时光。</p><p>父亲是位幽默有趣的老男孩，对生活工作有自己的理解，他总是能给我一些启发。他有时也会给我讲讲他早年体制内工作时的轶事，顺便指点下我的资本主义打工迷津。</p><p>生活和工作的平衡，在疫情之前我从来不觉得需要特别思考，一切节奏跟着通勤按部就班。之前多年一日的习惯早已固定了。</p><p>而现在各种因素都在潜移默化，空间边界消失，时间边界就容易也不清晰，高度自治的环境和工作中不断涌现的问题，经常让人久伏案板忘记时间。</p><p>这时，以父亲为代表的敲打团就开始要求中场休息。keep的slogan-“自律给我自由”，已然成了劝诫的反面，哭笑不得。那我是自律呢还是不自律呢？</p><p>谢谢你，感恩所有，珍惜当下🌈🌈🌈</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;总是感觉父亲比我更有生活的智慧，他总能从平淡恬静的生活中发现乐趣、秩序和美好。无论是手作、烹饪、园艺… 生活的方方面面。&lt;/p&gt;
&lt;p&gt;我和很多人一样，异地求学工作，之前的十几年都没有在家乡和父母一起长期生活；自己放飞了太久了，我心中对美好生活的刻板印象时常被父亲“讥讽”。</summary>
      
    
    
    
    <category term="Inner Thoughts" scheme="https://kikitamap.com/categories/Inner-Thoughts/"/>
    
    
  </entry>
  
  <entry>
    <title>HERE mSDK - Positioning</title>
    <link href="https://kikitamap.com/2020/04/19/HmSDK_Positioning/"/>
    <id>https://kikitamap.com/2020/04/19/HmSDK_Positioning/</id>
    <published>2020-04-19T04:50:58.000Z</published>
    <updated>2024-12-24T03:31:31.530Z</updated>
    
    <content type="html"><![CDATA[<p>地图技术是对真实世界既有位置的表达，定位技术是对当前位置的求解。随着各种传感器、移动设备的广泛使用，GIS和LBS通常无缝结合在同一个解决方案中。GIS更侧重于稳坐后台解决空间数据的提取、处理、分析、挖掘，LBS更侧重于深入终端实现信号收集、位置获取、轨迹追踪。GIS从一个小众而专业的领域，随着互联网的潮流，逐渐拥抱普适，增值LBS。</p><p>从终端用户的角度看，这些区别是不敏感的，也不必要的。例如，在一个陌生地方到了饭点儿，估计大家十有八九会打开App，看下周边地图，知道我在哪，搜下周边饭馆，然后计算路线导航过去，吃饱喝足一气呵成即可。</p><p>以上面这个觅食的例子展开，从产品功能角度，至少需要如下几个模块。App首先获取设备的位置（positioning），通过这个位置请求周边map tile（map service）, 然后搜索指定Category的POI（search&amp;F&#x2F;R geocoding），然后计算路线（routing&#x2F;direction）并导航（TBT Navigation）……</p><p>这一篇我想整理一下，位置服务第一步， Positioning 相关的内容。</p><p><img data-src="/images/blogImg/HmSDK_Positioning_opening.jpg"></p><p>HERE Mobile SDK 中不仅提供了Android 系统中自带的基础定位接口，而且特别提供了HERE增强版的定位能力，更精准，高效，可靠。这些增强版的定位能力包括：</p><ul><li><strong>蜂窝网络定位 - 支持 GSM, CDMA, WCDMA, TD-SCDMA ，LTE</strong></li><li><strong>WiFi 网络定位</strong></li><li><strong>高精度室内定位 - 支持 WiFi 和 蓝牙</strong></li><li><strong>离线定位 - 无任何网络连接时，使用预先按需自动下载的定位数据缓存、辅助定位数据，实现离线定位</strong></li><li><strong>定位模式自动融合，择优切换， 包括 GNSS，WiFi，蓝牙，蜂窝信号间的切换</strong></li><li><strong>室内定位 -支持于室内地图结合使用，支持楼层探测。 室内地图既可以是HERE已发布的公共资源，也可以是用户私属地图</strong></li><li><strong>HERE定位能力无缝覆盖全球</strong></li></ul><br><p>以上功能列表解释几个点：</p><p><strong>GNSS</strong>（Global Navigation Satellite System）包括除了我们熟知的 GPS，还包括 GLONASS,  Beidou, </p><p>QZSS,  Galileo 这些星座。 HERE Positioning 产品族系中，还有可支持到芯片级的 <span class="exturl" data-url="aHR0cHM6Ly93d3cuaGVyZS5jb20vcHJvZHVjdHMvdHJhY2tpbmctcG9zaXRpb25pbmctc29sdXRpb25zL2hkLWduc3M=">HD GNSS &#x2F; A-GNSS 产品<i class="fa fa-external-link-alt"></i></span>，用于显著提高首次定位时间和GNSS离线辅助定位。这里不展开了，以后有空再约起。</p><p><strong>WiFi离线定位</strong>，略复杂，是室内定位中成本较低的一种，不依赖于事先部署 Beacon。从使用者角度可以理解为两个使用场景：</p><ul><li><p>经常连接WiFi，有时断线使用，例如在办公室等熟悉场所。</p></li><li><p>周围无熟悉WiFi，例如进入一个陌生的大型购物中心。</p><p>前者可通过online WiFi定位的定位缓存数据解决离线问题；后者则需要大量的众包数据作为前提实现。</p><p>后者是一种更黑科技的技术，但是从原理上也不是难于理解。 可以想象，大型购物中心通常布满 WiFi热点，移动设备即使无法连接这些热点，也可以探测到这些WiFi热点的信息。根据信号场强的算法黑科技，最终是从已知点位解算未知点位的数学问题。</p><p>这里的问题是：已知点位怎么来？这正是源自众包、托关于定位服务器的 HERE Radio Map。采集和管理 Radio Map 实际官方也有给出工具<span class="exturl" data-url="aHR0cHM6Ly9pbmRvb3IuaGVyZS5jb20vIy90b29scw=="> HERE Indoor Radio Mapper<i class="fa fa-external-link-alt"></i></span> 和 <span class="exturl" data-url="aHR0cHM6Ly9pbmRvb3IuaGVyZS5jb20vIy90b29scy9oZWxwLXRleHQtMyNpbmRvb3ItcmFkaW8tbWFwLWFkbWluLXRvb2w=">HERE Radio Map Admin Tool<i class="fa fa-external-link-alt"></i></span> 。</p><p><img data-src="/images/blogImg/HmSDK_Positioning_RadioMap.jpg"></p></li></ul><p><strong>室内地图 &#x2F;Venue Map</strong>，在实际的使用场景中，室内定位一般与3D室内地图结合使用，但始终要理解，地图是地图，定位是定位，只是为了终端用户的视觉显示时，二者才绑到了一起。室内地图的显示和制作也有单独的工具，点<span class="exturl" data-url="aHR0cHM6Ly92ZW51ZXMuaGVyZS5jb20vcHJvZHVjdHMvb3ZlcnZpZXc=">这里<i class="fa fa-external-link-alt"></i></span>看官网。</p><p><img data-src="/images/blogImg/HmSDK_Positioning_indoor.jpg"></p><p>定位部分的开发部署，强烈建议仔细阅读开发文档，有关设备访问权限的几点一定要确保配置正确。</p><ul><li><p>HERE Mobile SDK - <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vZG9jdW1lbnRhdGlvbi9hbmRyb2lkLXByZW1pdW0vMy4xNS9kZXZfZ3VpZGUvdG9waWNzL2FkdmFuY2VkLXBvc2l0aW9uaW5nLmh0bWw=">Developer Doc<i class="fa fa-external-link-alt"></i></span></p></li><li><p>HERE Mobile SDK on Github - <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hlcmVtYXBzL2hlcmUtYW5kcm9pZC1zZGstZXhhbXBsZXMvdHJlZS9tYXN0ZXIvcG9zaXRpb25pbmc=">Sample Code<i class="fa fa-external-link-alt"></i></span></p></li></ul><p>可以带手机到室外和室内试一下这个Demo，支持选择定位模式。</p><p><img data-src="/images/blogImg/HmSDK_Positioning_Demo.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;地图技术是对真实世界既有位置的表达，定位技术是对当前位置的求解。随着各种传感器、移动设备的广泛使用，GIS和LBS通常无缝结合在同一个解决方案中。GIS更侧重于稳坐后台解决空间数据的提取、处理、分析、挖掘，LBS更侧重于深入终端实现信号收集、位置获取、轨迹追踪。GIS从一个小众而专业的领域，随着互联网的潮流，逐渐拥抱普适，增值LBS。&lt;/p&gt;
&lt;p&gt;从终端用户的角度看，这些区别是不敏感的，也不必要的。例如，在一个陌生地方到了饭点儿，估计大家十有八九会打开App，看下周边地图，知道我在哪，搜下周边饭馆，然后计算路线导航过去，吃饱喝足一气呵成即可。&lt;/p&gt;
&lt;p&gt;以上面这个觅食的例子展开，从产品功能角度，至少需要如下几个模块。App首先获取设备的位置（positioning），通过这个位置请求周边map tile（map service）, 然后搜索指定Category的POI（search&amp;amp;F&amp;#x2F;R geocoding），然后计算路线（routing&amp;#x2F;direction）并导航（TBT Navigation）……&lt;/p&gt;
&lt;p&gt;这一篇我想整理一下，位置服务第一步， Positioning 相关的内容。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;/images/blogImg/HmSDK_Positioning_opening.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;HERE Mobile SDK 中不仅提供了Android 系统中自带的基础定位接口，而且特别提供了HERE增强版的定位能力，更精准，高效，可靠。这些增强版的定位能力包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;蜂窝网络定位 - 支持 GSM, CDMA, WCDMA, TD-SCDMA ，LTE&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WiFi 网络定位&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高精度室内定位 - 支持 WiFi 和 蓝牙&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;离线定位 - 无任何网络连接时，使用预先按需自动下载的定位数据缓存、辅助定位数据，实现离线定位&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;定位模式自动融合，择优切换， 包括 GNSS，WiFi，蓝牙，蜂窝信号间的切换&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;室内定位 -支持于室内地图结合使用，支持楼层探测。 室内地图既可以是HERE已发布的公共资源，也可以是用户私属地图&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HERE定位能力无缝覆盖全球&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;

&lt;p&gt;以上功能列表解释几个点：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GNSS&lt;/strong&gt;（Global Navigation Satellite System）包括除了我们熟知的 GPS，还包括 GLONASS,  Beidou, &lt;/p&gt;</summary>
    
    
    
    <category term="Tech Notes" scheme="https://kikitamap.com/categories/Tech-Notes/"/>
    
    
    <category term="HERE Map" scheme="https://kikitamap.com/tags/HERE-Map/"/>
    
    <category term="HLS" scheme="https://kikitamap.com/tags/HLS/"/>
    
    <category term="Mobile SDK" scheme="https://kikitamap.com/tags/Mobile-SDK/"/>
    
    <category term="Android" scheme="https://kikitamap.com/tags/Android/"/>
    
    <category term="Positioning" scheme="https://kikitamap.com/tags/Positioning/"/>
    
  </entry>
  
  <entry>
    <title>HERE mSDK - Vector Tile / Map Feedback</title>
    <link href="https://kikitamap.com/2020/03/29/HmSDK_VectorTile-MFs/"/>
    <id>https://kikitamap.com/2020/03/29/HmSDK_VectorTile-MFs/</id>
    <published>2020-03-29T02:13:08.000Z</published>
    <updated>2024-12-24T03:31:31.529Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://kikitamap.com/2020/03/11/HmSDK_MapRendering/"><strong>上一篇</strong></a>，我们一起结合  Interactive Maps 了解了HERE Map Service 的地图渲染样式， 在此之外，HERE Mobile SDK 向开发者提供的在线地图产品中，还有 Vector Tile 和 Map Feedback service 值得拥有。</p><p><em>PS：除了SDK产品之外，<a href="https://developer.here.com/documentation#maps_section"><strong>HERE 在线地图产品</strong></a>中的 RESTful API 产品包括：Vector Tile，Image Map，Map Tile，Weather，Map Feeddback。</em></p><h2 id="Vector-Tile"><a href="#Vector-Tile" class="headerlink" title="Vector Tile"></a>Vector Tile</h2><p>Vector Tile 在 HERE 产品家族中是新进一员，截至此文章的发布日期，仅在 <a href="https://developer.here.com/documentation/android-sdk/dev_guide/topics/custom-map-styles-lite.html"><strong>mSDK Lite 版本</strong></a> 中有支持，目前为 Lite Edition 4.2  。我们静待 mSDK Premium Edition 的 4.x 版本吧，快了。</p><p>这使用这个服务之前，可能我首先需要回答大家的十万个为什么。</p><p>例如，什么是Vector Tile？为什么使用 Vector Tile ？</p><p>Vector Tile 是相较于传统的 raster tile 而言的，可能很多读者会问，地图数据本身不就是vector data 吗？为什么早期的地图服务反而会是 raster tile ？哪种好？ 我该用什么？</p><p>在传统的地图服务生产过程中，后台地图数据是专业复杂的数据格式（如 Oracle Spatial，shapefile，FileGDB，等一切地理数据格式），需要专业的重地图数据编辑器才能读写（如商用专业的ArcGIS Desktop&#x2F;Pro，免费的QGIS等）。当我们希望通过B&#x2F;S服务的形式提供在线地图时，对浏览器要求不高、支持友好的png，jpg，tiff等图片就成了解决方案。 将地图在服务器端按预定义的切片结构&#x2F;caching scheme 进行预渲染，然后，进行大量切片缓存工作。 在浏览器请求地图服务时，推送不同层级的图片（Raster Tile）就成了传统地图服务器的日常，其性能的保障都是依赖分布式高可用的服务器配置。例如，HERE 提供覆盖全球的地图服务（在Developer Portal可以查看具体的 <a href="https://developer.here.com/documentation/map-tile/dev_guide/topics/coverage-map.html"><strong>map coverage level</strong></a>，就是由部署在AWS全球6个数据中心上支持的。 </p><p>自 <a href="https://github.com/mapbox/vector-tile-spec/"><strong>Mapbox</strong></a> 提出更智慧的 vector tile ，这种切片格式早已备受各大GIS、LBS厂商的青睐。vector tile 采用了与 raster tile 类似的 caching scheme，只是每片tile的内容从raster 变成了vector。 我们想象一下，如果表示几条路的一片512px×512px 的tile，用raster格式，那就需要几个512×512 的矩阵表示，而用vector格式，只需要包含数对坐标和位移的串表示。 因此，vector tile 在尺寸上有明显优势，从而传输性能就高了。这是因为这个特性，vector tile 允许用户在客户端自定义 vector style ，例如路或点状地物的颜色和符号， 不像 raster tile 是预渲染的镜像，已经是静态结果，渲染样式不能被客户端修改。</p><p>如果提到vector 和 raster 哪个好？ 我想答案可能不是绝对唯一的。如果从传输性能和客户端简单符号的自定义的角度，一定是vector tile更优； 但如果从地图渲染丰富度、复杂度的支持角度，raster tile 还是占有一席之地。</p><p>现在回到 HERE Vector Tile Service ，为了方便客户快速生成 vector style configuration file ，HERE 提供了在线工具 <a href="https://enterprise.here.com/map-style-editor/"><strong>Map Style Editor</strong></a>。可以在登录 Developer Portal之后，点击前面的连接进入即可，如下图：</p><p><img data-src="/images/blogImg/HmSDK_VectorTile-MFs_map_editor.jpg"></p><ul><li><p>Github 获取到 mSDK Android Lite Edition 在线地图的官方 <a href="https://github.com/heremaps/here-sdk-examples/tree/master/examples/4.2.0.0/lite/android"><strong>代码样例</strong></a>。</p></li><li><p>Developer Portal 定制地图渲染样式的 <a href="https://developer.here.com/documentation/android-sdk/dev_guide/topics/custom-map-styles-lite.html"><strong>说明</strong></a>。</p></li></ul><p><img data-src="/images/blogImg/HmSDK_VectorTile-MFs_Lite_Demo.jpg"></p><h2 id="Map-Feedback"><a href="#Map-Feedback" class="headerlink" title="Map Feedback"></a>Map Feedback</h2><p>创建地图应用时，最常见问题之一就是“巧妇难为无米之炊” ，地图数据是“米”，之上的各种在线地图及位置能力的实现是“炊”。HERE 攒了30多年的数据采集经验，米仓充盈。在丰富的数据采集手段中，其中最平易近人的一支就是来自用户的数据问题回报。</p><p>无论是商业客户，还是免费社区，全球用户都可以使用 Map Feedback API 提出数据缺漏或错误。当然可想而知，整个群体数量非常庞大，数据生产单元会根据一系列的规则评定用户的信用优先级，来管理这些回报过来的数据问题的处理策略。</p><p>在 <a href="https://developer.here.com/documentation/map-feedback/dev_guide/topics/quick-start-submit-feedback.html"><strong>Rest API</strong></a> ， <a href="https://developer.here.com/documentation/embedded-editor/dev_guide/topics/add-as-app-component.html"><strong>mobile SDK</strong></a> ， <a href="https://developer.here.com/documentation/embedded-editor/dev_guide/topics/add-to-website.html"><strong>Web SDK</strong></a> 各版本都有对数据回报的支持，其中最完整的开发文档，还是建议看 Rest API 的部分，它包含了全部可枚举的错误类型和信息上报的说明。用户也可以追踪数据问题的处理结果，例如，被采纳或拒绝，以及采纳后预计更新时间。</p><ul><li>Rest API - Request URL 的请见 <a href="https://developer.here.com/documentation/examples/rest/map_feedback"><strong>样例</strong></a>。</li></ul><p>另外，在HERE 官方地图应用中，<a href="http://mapcreator.here.com/"><strong>Map Creater</strong></a> 和 <a href="https://wego.here.com/"><strong>HERE Wego</strong></a> 都包含了这个功能，只是这两个网站目前还在墙外，希望早日能与我们正式见面。</p><p><img data-src="/images/blogImg/HmSDK_VectorTile-MFs_Map_Creator.jpg"></p><p>关于这两个服务就说这么多了，有空再继续进行下一集。</p><p>Stay tuned ！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;http://kikitamap.com/2020/03/11/HmSDK_MapRendering/&quot;&gt;&lt;strong&gt;上一篇&lt;/strong&gt;&lt;/a&gt;，我们一起结合  Interactive Maps 了解了HERE Map Service 的地图渲染样式， 在此之外，HERE Mobile SDK 向开发者提供的在线地图产品中，还有 Vector Tile 和 Map Feedback service 值得拥有。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PS：除了SDK产品之外，&lt;a href=&quot;https://developer.here.com/documentation#maps_section&quot;&gt;&lt;strong&gt;HERE 在线地图产品&lt;/strong&gt;&lt;/a&gt;中的 RESTful API 产品包括：Vector Tile，Image Map，Map Tile，Weather，Map Feeddback。&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;Vector-Tile&quot;&gt;&lt;a href=&quot;#Vector-Tile&quot; class=&quot;headerlink&quot; title=&quot;Vector Tile&quot;&gt;&lt;/a&gt;Vector Tile&lt;/h2&gt;&lt;p&gt;Vector Tile 在 HERE 产品家族中是新进一员，截至此文章的发布日期，仅在 &lt;a href=&quot;https://developer.here.com/documentation/android-sdk/dev_guide/topics/custom-map-styles-lite.html&quot;&gt;&lt;strong&gt;mSDK Lite 版本&lt;/strong&gt;&lt;/a&gt; 中有支持，目前为 Lite Edition 4.2  。我们静待 mSDK Premium Edition 的 4.x 版本吧，快了。&lt;/p&gt;
&lt;p&gt;这使用这个服务之前，可能我首先需要回答大家的十万个为什么。&lt;/p&gt;
&lt;p&gt;例如，什么是Vector Tile？为什么使用 Vector Tile ？&lt;/p&gt;
&lt;p&gt;Vector Tile 是相较于传统的 raster tile 而言的，可能很多读者会问，地图数据本身不就是vector data 吗？为什么早期的地图服务反而会是 raster tile ？哪种好？ 我该用什么？&lt;/p&gt;
&lt;p&gt;在传统的地图服务生产过程中，后台地图数据是专业复杂的数据格式（如 Oracle Spatial，shapefile，FileGDB，等一切地理数据格式），需要专业的重地图数据编辑器才能读写（如商用专业的ArcGIS Desktop&amp;#x2F;Pro，免费的QGIS等）。当我们希望通过B&amp;#x2F;S服务的形式提供在线地图时，对浏览器要求不高、支持友好的png，jpg，tiff等图片就成了解决方案。 将地图在服务器端按预定义的切片结构&amp;#x2F;caching scheme 进行预渲染，然后，进行大量切片缓存工作。 在浏览器请求地图服务时，推送不同层级的图片（Raster Tile）就成了传统地图服务器的日常，其性能的保障都是依赖分布式高可用的服务器配置。例如，HERE 提供覆盖全球的地图服务（在Developer Portal可以查看具体的 &lt;a href=&quot;https://developer.here.com/documentation/map-tile/dev_guide/topics/coverage-map.html&quot;&gt;&lt;strong&gt;map coverage level&lt;/strong&gt;&lt;/a&gt;，就是由部署在AWS全球6个数据中心上支持的。 &lt;/p&gt;
&lt;p&gt;自 &lt;a href=&quot;https://github.com/mapbox/vector-tile-spec/&quot;&gt;&lt;strong&gt;Mapbox&lt;/strong&gt;&lt;/a&gt; 提出更智慧的 vector tile ，这种切片格式早已备受各大GIS、LBS厂商的青睐。vector tile 采用了与 raster tile 类似的 caching scheme，只是每片tile的内容从raster 变成了vector。 我们想象一下，如果表示几条路的一片512px×512px 的tile，用raster格式，那就需要几个512×512 的矩阵表示，而用vector格式，只需要包含数对坐标和位移的串表示。 因此，vector tile 在尺寸上有明显优势，从而传输性能就高了。这是因为这个特性，vector tile 允许用户在客户端自定义 vector style ，例如路或点状地物的颜色和符号， 不像 raster tile 是预渲染的镜像，已经是静态结果，渲染样式不能被客户端修改。&lt;/p&gt;
&lt;p&gt;如果提到vector 和 raster 哪个好？ 我想答案可能不是绝对唯一的。如果从传输性能和客户端简单符号的自定义的角度，一定是vector tile更优； 但如果从地图渲染丰富度、复杂度的支持角度，raster tile 还是占有一席之地。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech Notes" scheme="https://kikitamap.com/categories/Tech-Notes/"/>
    
    
    <category term="Vector Tiles" scheme="https://kikitamap.com/tags/Vector-Tiles/"/>
    
    <category term="HERE Map" scheme="https://kikitamap.com/tags/HERE-Map/"/>
    
    <category term="HLS" scheme="https://kikitamap.com/tags/HLS/"/>
    
    <category term="Mobile SDK" scheme="https://kikitamap.com/tags/Mobile-SDK/"/>
    
    <category term="Android" scheme="https://kikitamap.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>HERE mSDK - Map Rendering</title>
    <link href="https://kikitamap.com/2020/03/11/HmSDK_MapRendering/"/>
    <id>https://kikitamap.com/2020/03/11/HmSDK_MapRendering/</id>
    <published>2020-03-10T17:17:23.000Z</published>
    <updated>2024-12-24T03:31:31.529Z</updated>
    
    <content type="html"><![CDATA[<p>通过上一个<a href="http://kikitamap.com/2020/03/09/HmSDK_QuickStart/">入门篇</a>，相信你已经对 HERE mSDK 有了一定的印象。<br>作为一个地图SDK，最基础最重要的功能首先是地图渲染， 那么今天我们仍然以 HERE mSDK （Premium Edition）为例一起了解下。在 HERE Location Services 中有一个 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vZG9jdW1lbnRhdGlvbiNtYXBzX3NlY3Rpb24=">Interactive Maps Service<i class="fa fa-external-link-alt"></i></span>，用于访问服务器端预渲染的瓦片服务&#x2F;tile map， 这就是今天要用到的原料。</p><p>Let’s get our hands dirty ！<br>今天这篇我们先从最基础的 Map Rendering 和 Map Schemes 开始。 <code>AndroidXMapFragment</code> 类提供了交互式地图体验支持， 例如缩放、平移等等。<code>AndroidXMapFragment</code>初始化之后，可以通过<code>Map map = mapFragment.getMap();</code> 获取 <code>Map</code> 。<br><code>Map</code> 类中提供了很多 map attributes 帮助开发者确定地图的展示方式，例如：map center，zoom level,  tilt, orientation, map projection, map animation …… </p><blockquote><p>详见开发文档：<a href="https://developer.here.com/documentation/android-premium/dev_guide/topics/maps.html"><strong>Map</strong></a></p></blockquote><p>HERE Interactive Maps 提供了很多样式的地图外观（Map Scheme）可供选择，以满足不同审美和专题的需求。简而言之，地图数据是一套，皮肤可有很多种。 </p><blockquote><p>在开发者文档中，有一页图文可供参考：<a href="https://developer.here.com/documentation/android-premium/dev_guide/topics/map-schemes.html"><strong>Map Scheme</strong></a></p></blockquote><p>HERE 在 Github上有官方的示例代码库，这篇的相关示例可以在这个连接中找到：<a href="https://github.com/heremaps/here-android-sdk-examples/tree/master/map-attribute"><strong>Map Attribute</strong></a></p><p>我在这个工程中稍作修改，增加了 Satallite Mode 和 Night Mode，  因为后者是最近备受欢迎的一种渲染方式，这么好看的地图不做在样例里觉得有点可惜。 Night Mode 一方面可以作为夜晚时段的地图展示，另一方面可以作为设备暗色主题搭配的地图显示。<br>另外，这个示例工程中，还包含了公交&#x2F;Transit 主题地图的展示（None&#x2F;公交站&#x2F;公交线路），以及路况&#x2F;Realtime Traffic Service 的展示 （Traffic Flow &#x2F; Incident）。</p><p>Happy testing ^^</p><p><img data-src="/images/blogImg/HmSDK_MapRendering.jpg"></p><p>如下是在 Nexus 10 模拟器中的录屏:</p><div id="video"><video width="550" height="854" controls autoplay muted><source src="/images/blogImg/HmSDK_MapRenderingDemo.mp4" type="video/mp4"></video></div><style type="text/css">#video{width:550px; height:854px;background:#ffcccc;}</style>]]></content>
    
    
    <summary type="html">&lt;p&gt;通过上一个&lt;a href=&quot;http://kikitamap.com/2020/03/09/HmSDK_QuickStart/&quot;&gt;入门篇&lt;/a&gt;，相信你已经对 HERE mSDK 有了一定的印象。&lt;br&gt;作为一个地图SDK，最基础最重要的功能首先是地图渲染， 那么今天我们仍然以 HERE mSDK （Premium Edition）为例一起了解下。在 HERE Location Services 中有一个 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vZG9jdW1lbnRhdGlvbiNtYXBzX3NlY3Rpb24=&quot;&gt;Interactive Maps Service&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;，用于访问服务器端预渲染的瓦片服务&amp;#x2F;tile map， 这就是今天要用到的原料。&lt;/p&gt;
&lt;p&gt;Let’s get our hands dirty ！&lt;br&gt;今天这篇我们先从最基础的 Map Rendering 和 Map Schemes 开始。 &lt;code&gt;AndroidXMapFragment&lt;/code&gt; 类提供了交互式地图体验支持， 例如缩放、平移等等。&lt;code&gt;AndroidXMapFragment&lt;/code&gt;初始化之后，可以通过&lt;code&gt;Map map = mapFragment.getMap();&lt;/code&gt; 获取 &lt;code&gt;Map&lt;/code&gt; 。&lt;br&gt;&lt;code&gt;Map&lt;/code&gt; 类中提供了很多 map attributes 帮助开发者确定地图的展示方式，例如：map center，zoom level,  tilt, orientation, map projection, map animation …… &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;详见开发文档：&lt;a href=&quot;https://developer.here.com/documentation/android-premium/dev_guide/topics/maps.html&quot;&gt;&lt;strong&gt;Map&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;HERE Interactive Maps 提供了很多样式的地图外观（Map Scheme）可供选择，以满足不同审美和专题的需求。简而言之，地图数据是一套，皮肤可有很多种。 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在开发者文档中，有一页图文可供参考：&lt;a href=&quot;https://developer.here.com/documentation/android-premium/dev_guide/topics/map-schemes.html&quot;&gt;&lt;strong&gt;Map Scheme&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;HERE 在 Github上有官方的示例代码库，这篇的相关示例可以在这个连接中找到：&lt;a href=&quot;https://github.com/heremaps/here-android-sdk-examples/tree/master/map-attribute&quot;&gt;&lt;strong&gt;Map Attribute&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我在这个工程中稍作修改，增加了 Satallite Mode 和 Night Mode，  因为后者是最近备受欢迎的一种渲染方式，这么好看的地图不做在样例里觉得有点可惜。 Night Mode 一方面可以作为夜晚时段的地图展示，另一方面可以作为设备暗色主题搭配的地图显示。&lt;br&gt;另外，这个示例工程中，还包含了公交&amp;#x2F;Transit 主题地图的展示（None&amp;#x2F;公交站&amp;#x2F;公交线路），以及路况&amp;#x2F;Realtime Traffic Service 的展示 （Traffic Flow &amp;#x2F; Incident）。&lt;/p&gt;
&lt;p&gt;Happy testing ^^&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;/images/blogImg/HmSDK_MapRendering.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;如下是在 Nexus 10 模拟器中的录屏:&lt;/p&gt;</summary>
    
    
    
    <category term="Tech Notes" scheme="https://kikitamap.com/categories/Tech-Notes/"/>
    
    
    <category term="HERE Map" scheme="https://kikitamap.com/tags/HERE-Map/"/>
    
    <category term="HLS" scheme="https://kikitamap.com/tags/HLS/"/>
    
    <category term="Mobile SDK" scheme="https://kikitamap.com/tags/Mobile-SDK/"/>
    
    <category term="Android" scheme="https://kikitamap.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Quick Start of HERE SDK for Android</title>
    <link href="https://kikitamap.com/2020/03/09/HmSDK_QuickStart/"/>
    <id>https://kikitamap.com/2020/03/09/HmSDK_QuickStart/</id>
    <published>2020-03-09T13:18:07.000Z</published>
    <updated>2024-12-24T03:31:31.528Z</updated>
    
    <content type="html"><![CDATA[<p>今天整理下 HERE SDK的入门攻略~</p><p>HERE mobile SDK 是HERE location Servie（HLS）产品家族中重要的一部分，支持 Android 和 iOS 两大主流系统；从功能上分为 Lite（旧版本称 Starter）和 Premium 两个license level，顾名思义，前者支持较轻量级的功能，后者具有更专业更高级的功能。具体的功能清单和版本对比，可以在点击 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vcHJvZHVjdHMvaGVyZS1zZGs=">官网链接<i class="fa fa-external-link-alt"></i></span> 查到。</p><p>HERE Developer 网站提供免费测试账号，建议大家注册一个玩一玩。每个 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vcHJpY2luZw==">Freemium Plan<i class="fa fa-external-link-alt"></i></span> 账号下的 Project 可以拥有 Rest API、JS API、mSDK、studio 等很多产品的测试权限。对于个人 developer 来说，我认为足矣。</p><blockquote><p><strong>Freemium Plan 福利内容</strong></p><p>Location Services</p><ul><li>250K Transactions per month</li><li>5K SDK Monthly Active Users</li><li>250 Assets per month</li><li>Pay per additional Transactions</li></ul><p>Studio</p><ul><li>2.5GB Data transfer per month</li><li>5GB Database storage per month</li><li>Pay per additional Data transfer or Database storage</li></ul></blockquote><h1 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h1><h2 id="获取Credentials及SDK安装包"><a href="#获取Credentials及SDK安装包" class="headerlink" title="获取Credentials及SDK安装包"></a>获取Credentials及SDK安装包</h2><p>登录 HERE Developer 账户之后，即可在自己创建的Project中生成每个产品对应的密钥&#x2F;credentials。</p><p>在 SDK 密钥下方就有 SDK安装包可供下载。如下图即为 HERE mSDK （premium edition） 的示例：</p><p><img data-src="/images/blogImg/HmSDK_QuickStart_keys.jpg"></p><h2 id="检查-System-Requirments"><a href="#检查-System-Requirments" class="headerlink" title="检查 System Requirments"></a>检查 System Requirments</h2><p>这是安装一切软件产品之前，仔细阅读<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vZG9jdW1lbnRhdGlvbi9hbmRyb2lkLXByZW1pdW0vZGV2X2d1aWRlL3RvcGljcy9zeXN0ZW0tcmVxdWlyZW1lbnRzLmh0bWw=">官方系统要求<i class="fa fa-external-link-alt"></i></span>，永远是不错的选择。</p><h2 id="快速运行-Tutorial-Example"><a href="#快速运行-Tutorial-Example" class="headerlink" title="快速运行 Tutorial Example"></a>快速运行 Tutorial Example</h2><p>下载后的SDK 安装包中包含了 user guild，release notes，SDK libraries， tutorial example 这几大件。 如果要快速入门，tutorial example 运行起来是必须的啦。</p><p>这里假设大家使用的开发环境都是 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5nb29nbGUuY24vc3R1ZGlv">Android Studio<i class="fa fa-external-link-alt"></i></span>， 解压缩 SDK 安装包后，开始吧！</p><ol><li><p>启动 Android Studio，选择 open an existing Android Studio project， 浏览至 tutorial example 所在目录， <code>.../HERE-sdk/tutorial/BasicMapSolution</code> 。 </p></li><li><p>接着会发现一条报错 <code>Error: Failed to resolve: :HERE-sdk:</code>， 这个不用担心，是因为 HERE SDK 的 libraries 默认没有包含在这个工程中。</p></li><li><p>在 <code>BasicMapSolution</code> 中的 <code>app</code> 文件夹下创建一个名为 <code>libs</code> 的文件夹，并将安装包中的 <code>HERE-sdk/libs</code> 下的 <code>HERE-sdk.aar</code> 复制到这里。上步遇到的问题就解决料。</p></li><li><p>检查 <code>app/build.gradle </code> 文件，确保如下内容已经包含：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">repositories &#123;</span><br><span class="line">  flatDir &#123;</span><br><span class="line">    dirs <span class="string">&#x27;libs&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">dependencies &#123;</span><br><span class="line">  implementation(name:<span class="string">&#x27;HERE-sdk&#x27;</span>, ext:<span class="string">&#x27;aar&#x27;</span>)</span><br><span class="line">  <span class="comment">// Depending on your specific project configuration you may have other entries here.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>准备许可。每个 application 都需要一套单独的credentials。需要注意：为app申请credentials时，填写的 package name 需要和注册的bundle identifier 完全一致。就这个 sample来说， 应该使用 package name：<code> com.here.android.tutorial</code> 。如果在文章的开始，你已经注册了credential，那也没有关系，在 developer 网站的 project 页面中，你还可以修改哦，同时密钥会重新刷一遍，请使用最新的。<br><img data-src="/images/blogImg/HmSDK_QuickStart_PackageName.jpg"> </p></li><li><p>写入许可。 打开目录 <code>BasicMapSolution/app/src/main/</code> 下的<code>AndroidManifest.xml</code>文件。找到三行 <code>&lt;meta-data&gt;</code>开头的语句，填写 credentials 即可。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;com.here.android.maps.appid&quot;</span> <span class="attr">android:value</span>=<span class="string">&quot;&#123;YOUR_APP_ID&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;com.here.android.maps.apptoken&quot;</span> <span class="attr">android:value</span>=<span class="string">&quot;&#123;YOUR_APP_CODE&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">&quot;com.here.android.maps.license.key&quot;</span> <span class="attr">android:value</span>=<span class="string">&quot;&#123;YOUR_LICENSE_KEY&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>连接设备，运行程序，Bingo ！</p></li></ol><h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><p>测试过程中，不确定大家有没有遇到我曾遇到的问题？</p><p><code>This project uses AndroidX dependencies, but the &#39;android.useAndroidX&#39; property is not enabled. Set this property to true in the gradle.properties file and retry.</code></p><p>解决方法：</p><p>在sample project 中的 <code>gradle.properties</code>文件中，增加一句：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android.useAndroidX=<span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p>最后上图，我手头没有 Android 设备，用了 Nexus 10 模拟器：</p><p><img data-src="/images/blogImg/HmSDK_QuickStart_Run.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天整理下 HERE SDK的入门攻略~&lt;/p&gt;
&lt;p&gt;HERE mobile SDK 是HERE location Servie（HLS）产品家族中重要的一部分，支持 Android 和 iOS 两大主流系统；从功能上分为 Lite（旧版本称 Starter）和 Premium 两个license level，顾名思义，前者支持较轻量级的功能，后者具有更专业更高级的功能。具体的功能清单和版本对比，可以在点击 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vcHJvZHVjdHMvaGVyZS1zZGs=&quot;&gt;官网链接&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt; 查到。&lt;/p&gt;
&lt;p&gt;HERE Developer 网站提供免费测试账号，建议大家注册一个玩一玩。每个 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vcHJpY2luZw==&quot;&gt;Freemium Plan&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt; 账号下的 Project 可以拥有 Rest API、JS API、mSDK、studio 等很多产品的测试权限。对于个人 developer 来说，我认为足矣。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Freemium Plan 福利内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Location Services&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;250K Transactions per month&lt;/li&gt;
&lt;li&gt;5K SDK Monthly Active Users&lt;/li&gt;
&lt;li&gt;250 Assets per month&lt;/li&gt;
&lt;li&gt;Pay per additional Transactions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Studio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2.5GB Data transfer per month&lt;/li&gt;
&lt;li&gt;5GB Database storage per month&lt;/li&gt;
&lt;li&gt;Pay per additional Data transfer or Database storage&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Steps&quot;&gt;&lt;a href=&quot;#Steps&quot; class=&quot;headerlink&quot; title=&quot;Steps&quot;&gt;&lt;/a&gt;Steps&lt;/h1&gt;&lt;h2 id=&quot;获取Credentials及SDK安装包&quot;&gt;&lt;a href=&quot;#获取Credentials及SDK安装包&quot; class=&quot;headerlink&quot; title=&quot;获取Credentials及SDK安装包&quot;&gt;&lt;/a&gt;获取Credentials及SDK安装包&lt;/h2&gt;&lt;p&gt;登录 HERE Developer 账户之后，即可在自己创建的Project中生成每个产品对应的密钥&amp;#x2F;credentials。&lt;/p&gt;
&lt;p&gt;在 SDK 密钥下方就有 SDK安装包可供下载。如下图即为 HERE mSDK （premium edition） 的示例：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;/images/blogImg/HmSDK_QuickStart_keys.jpg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;检查-System-Requirments&quot;&gt;&lt;a href=&quot;#检查-System-Requirments&quot; class=&quot;headerlink&quot; title=&quot;检查 System Requirments&quot;&gt;&lt;/a&gt;检查 System Requirments&lt;/h2&gt;</summary>
    
    
    
    <category term="Tech Notes" scheme="https://kikitamap.com/categories/Tech-Notes/"/>
    
    
    <category term="HERE Map" scheme="https://kikitamap.com/tags/HERE-Map/"/>
    
    <category term="HLS" scheme="https://kikitamap.com/tags/HLS/"/>
    
    <category term="Mobile SDK" scheme="https://kikitamap.com/tags/Mobile-SDK/"/>
    
    <category term="Android" scheme="https://kikitamap.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>the Shade</title>
    <link href="https://kikitamap.com/2020/03/05/theShade/"/>
    <id>https://kikitamap.com/2020/03/05/theShade/</id>
    <published>2020-03-04T16:15:57.000Z</published>
    <updated>2024-12-24T03:31:31.526Z</updated>
    
    <content type="html"><![CDATA[<p>又是很久没来更新，以至于kikitamap.com这个域名因为没有续费而已经停用接近两周；要不是今晚忽然想写点什么，还不知道什么时候我才能发现。</p><p>工作结束了，宝贝睡下了，每到接近12点，似乎属于我自己的完整时间才开始展开。所以，我的母亲总是不解，为什么终于到了你的休息时间，反而又要”熬夜“ ？事情不能明天做吗？ 我总是无言以对，我这种矫情的时间独占需求，估计她不会理解，只好安抚她说马上就睡。大概，也不是所有人都有与自己独处的强需求。</p><p>我喜欢拍照，拍各种自认为有趣的东西，因此手机空间经常告急，只好翻一翻，删除一些不喜欢的或是没有什么内容的。忽然发现了这张很久前拍的。</p><p><img data-src="/images/blogImg/SSN_theShade_20160403_TJWQ.jpg"></p><p>当时的场景是我在等人，刚好从站的位置，看到自己的影子叠在橱窗里的模特身上，感觉很有点意思，就顺手拍了下来。世间熙熙攘攘，我们大多数都是追寻成为模特壳子的样子；住在壳子里面的人的样子呢？ta们是同一个吗？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;又是很久没来更新，以至于kikitamap.com这个域名因为没有续费而已经停用接近两周；要不是今晚忽然想写点什么，还不知道什么时候我才能发现。&lt;/p&gt;
&lt;p&gt;工作结束了，宝贝睡下了，每到接近12点，似乎属于我自己的完整时间才开始展开。所以，我的母亲总是不解，为什么终于到了</summary>
      
    
    
    
    <category term="Inner Thoughts" scheme="https://kikitamap.com/categories/Inner-Thoughts/"/>
    
    
  </entry>
  
  <entry>
    <title>WiFi Network Positioning</title>
    <link href="https://kikitamap.com/2019/06/27/wlanNetworks/"/>
    <id>https://kikitamap.com/2019/06/27/wlanNetworks/</id>
    <published>2019-06-27T06:17:00.000Z</published>
    <updated>2024-12-24T03:31:31.526Z</updated>
    
    <content type="html"><![CDATA[<p>在设备开启WiFi之后，会对周边 WiFi Access Point (AP)进行扫描，并将这些可见WiFi名称推给用户供选择。这是几乎是我们的PC和手机的日常。 除了连接WiFi登录Internet 之外，实际上，我们还可以通过 WiFi AP进行定位。</p><p>定位和地图一直是紧密联系的，无论是面向消费者的第一人称应用，还是关于管理者的追踪需求。各大LBS厂商，早就提供了各种定位功能，尤其HERE，Positioning 历史可以追溯到 Nokia年代，包括基于 GPS，WiFi network，Cell Signal，Bluetooth 等各种信号源的定位能力。</p><br><h1 id="Concept"><a href="#Concept" class="headerlink" title="Concept"></a>Concept</h1><ul><li><p>除了Mobile Hotspot、WiFi Egg，大多数情况下 AP不会经常的移动， 这就为WiFi定位的基础参照位置信息；</p></li><li><p>理论上，每一个 AP 都有全球唯一标识符— mac地址；当然也不排除有重复mac的问题，至于如何去重和更新后端数据库就是 another story，这里不展开了；</p></li><li><p>设备WiFi扫描到AP即可同时获取AP的信息，信号的强度，mac地址（BSSID）等，无论是否连接上；</p></li><li><p>根据WiFi信号强度衰减和距离的函数，可以判断设备离AP的距离；如果多个AP存在，那么这多个圆相交的区域就可以判定设备的位置；</p></li></ul><p>从上面的原理可以看出，AP的位置越准确，设备扫描到的AP越多，那么设备的位置越准确。</p><br><h1 id="Quick-Testing"><a href="#Quick-Testing" class="headerlink" title="Quick Testing"></a>Quick Testing</h1><p>做个小测试，帮助快速理解。</p><p>假设已经拥有了 HERE Developer 账号和密钥，如果没有，这里 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vP2NyZWF0ZT1GcmVlbWl1bS1CYXNpYyZrZWVwU3RhdGU9dHJ1ZSZzdGVwPWFjY291bnQ=">免费注册<i class="fa fa-external-link-alt"></i></span>。 </p><p>以我手头的 Windows 和 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vZG9jdW1lbnRhdGlvbi9wb3NpdGlvbmluZy90b3BpY3MvcmVxdWVzdC1jb25zdHJ1Y3RpbmcuaHRtbA==">HERE Positioning API<i class="fa fa-external-link-alt"></i></span> 的 WLAN Positioning为例。</p><br><p><strong>1</strong>   获取周边WiFi信息，可以使用 <code>netsh</code> 命令查到当前扫描到的AP。 </p><p>   <code>netsh wlan show networks mode=BSSID</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;netsh wlan show networks mode=BSSID</span><br><span class="line"></span><br><span class="line">Interface name : Wi-Fi</span><br><span class="line">There are 18 networks currently visible.</span><br><span class="line"></span><br><span class="line">SSID 1 : guest</span><br><span class="line">    Network type            : Infrastructure</span><br><span class="line">    Authentication          : WPA2-Personal</span><br><span class="line">    Encryption              : CCMP</span><br><span class="line">    BSSID 1                 : 0a:69:6c:0c:08:c2</span><br><span class="line">         Signal             : 30%</span><br><span class="line">         Radio type         : 802.11n</span><br><span class="line">         Channel            : 11</span><br><span class="line">         Basic rates (Mbps) : 1 2 5.5 11</span><br><span class="line">         Other rates (Mbps) : 6 9 12 18 24 36 48 54</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">SSID 18 : Regus-76</span><br><span class="line">    Network type            : Infrastructure</span><br><span class="line">    Authentication          : WPA2-Personal</span><br><span class="line">    Encryption              : CCMP</span><br><span class="line">    BSSID 1                 : 0c:d8:6c:9f:1e:80</span><br><span class="line">         Signal             : 68%</span><br><span class="line">         Radio type         : 802.11n</span><br><span class="line">         Channel            : 13</span><br><span class="line">         Basic rates (Mbps) : 1 2 5.5 11</span><br><span class="line">         Other rates (Mbps) : 6 9 12 18 24 36 48 54</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><p><strong>2</strong>  使用收集到的 BSSID 发送类似 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vZG9jdW1lbnRhdGlvbi9wb3NpdGlvbmluZy90b3BpY3MvZXhhbXBsZS13bGFuLmh0bWw=">这个示例<i class="fa fa-external-link-alt"></i></span> 中的请求即可，so easy!</p><p>   当然, 这只是 online WiFi positioning， 还有更黑科技的 offline positioning，有空再更。</p>   <br>   <br><p><strong>Demo Screenshot</strong></p><p>   Chian HLS JS API + Global Positioning API </p><p>   <img data-src="/images/blogImg/wlanNetworks_CHLS.png"></p><p>   Global HLS Imagery View</p><p>   <img data-src="/images/blogImg/wlanNetworks_imagary.png"></p><p>Have Fun！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在设备开启WiFi之后，会对周边 WiFi Access Point (AP)进行扫描，并将这些可见WiFi名称推给用户供选择。这是几乎是我们的PC和手机的日常。 除了连接WiFi登录Internet 之外，实际上，我们还可以通过 WiFi AP进行定位。&lt;/p&gt;
&lt;p&gt;定位和地图一直是紧密联系的，无论是面向消费者的第一人称应用，还是关于管理者的追踪需求。各大LBS厂商，早就提供了各种定位功能，尤其HERE，Positioning 历史可以追溯到 Nokia年代，包括基于 GPS，WiFi network，Cell Signal，Bluetooth 等各种信号源的定位能力。&lt;/p&gt;
&lt;br&gt;

&lt;h1 id=&quot;Concept&quot;&gt;&lt;a href=&quot;#Concept&quot; class=&quot;headerlink&quot; title=&quot;Concept&quot;&gt;&lt;/a&gt;Concept&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;除了Mobile Hotspot、WiFi Egg，大多数情况下 AP不会经常的移动， 这就为WiFi定位的基础参照位置信息；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;理论上，每一个 AP 都有全球唯一标识符— mac地址；当然也不排除有重复mac的问题，至于如何去重和更新后端数据库就是 another story，这里不展开了；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设备WiFi扫描到AP即可同时获取AP的信息，信号的强度，mac地址（BSSID）等，无论是否连接上；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;根据WiFi信号强度衰减和距离的函数，可以判断设备离AP的距离；如果多个AP存在，那么这多个圆相交的区域就可以判定设备的位置；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从上面的原理可以看出，AP的位置越准确，设备扫描到的AP越多，那么设备的位置越准确。&lt;/p&gt;
&lt;br&gt;

&lt;h1 id=&quot;Quick-Testing&quot;&gt;&lt;a href=&quot;#Quick-Testing&quot; class=&quot;headerlink&quot; title=&quot;Quick Testing&quot;&gt;&lt;/a&gt;Quick Testing&lt;/h1&gt;&lt;p&gt;做个小测试，帮助快速理解。&lt;/p&gt;
&lt;p&gt;假设已经拥有了 HERE Developer 账号和密钥，如果没有，这里 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vP2NyZWF0ZT1GcmVlbWl1bS1CYXNpYyZrZWVwU3RhdGU9dHJ1ZSZzdGVwPWFjY291bnQ=&quot;&gt;免费注册&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;。 &lt;/p&gt;</summary>
    
    
    
    <category term="Tech Notes" scheme="https://kikitamap.com/categories/Tech-Notes/"/>
    
    
    <category term="HERE Map" scheme="https://kikitamap.com/tags/HERE-Map/"/>
    
    <category term="HLS" scheme="https://kikitamap.com/tags/HLS/"/>
    
    <category term="Network" scheme="https://kikitamap.com/tags/Network/"/>
    
    <category term="Positioning" scheme="https://kikitamap.com/tags/Positioning/"/>
    
  </entry>
  
  <entry>
    <title>HERE MAP API - Part4 Advanced Routing - 2</title>
    <link href="https://kikitamap.com/2019/05/12/Icecream_Part4-Adcanced-Routing_2/"/>
    <id>https://kikitamap.com/2019/05/12/Icecream_Part4-Adcanced-Routing_2/</id>
    <published>2019-05-12T05:32:37.000Z</published>
    <updated>2024-12-24T03:31:31.524Z</updated>
    
    <content type="html"><![CDATA[<p>在上一篇中，尝试给出三条备选路线方案，只是看看是不够的，还需要做些交互式的操作支持。</p><h3 id="1-Visual-Tweaks"><a href="#1-Visual-Tweaks" class="headerlink" title="1 Visual Tweaks"></a>1 Visual Tweaks</h3><p>首先，这里我们做点小小的视觉调整，让路线和位置更漂亮一点。例如：</p><p>给路线的加上半透明效果，在<code>drawRoute()</code>中增加：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> routeLine = <span class="keyword">new</span> H.<span class="property">map</span>.<span class="title class_">Polyline</span>(strip, &#123;</span><br><span class="line">  <span class="attr">style</span>: &#123; <span class="attr">strokeColor</span>: <span class="string">&#x27;rgba(0, 85, 170, 0.5)&#x27;</span>, <span class="attr">lineWidth</span>: <span class="number">3</span> &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>再给配送的起点、终点，快递员的当前位置赋予不同的显示符号，在<code>map.js</code>中修改<code>addMarker()</code>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">HEREMap</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">addMarker</span> = <span class="keyword">function</span> (<span class="params">coordinates, icon</span>) &#123;</span><br><span class="line">  <span class="comment">// Add an markerOptions object</span></span><br><span class="line">  <span class="keyword">var</span> markerOptions = &#123;&#125;</span><br><span class="line">  <span class="comment">// three different icons for origin, destination and the user&#x27;s current position</span></span><br><span class="line">  <span class="keyword">var</span> icons = &#123;</span><br><span class="line">    <span class="attr">iceCream</span>: &#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;./images/marker-gelato.svg&#x27;</span>,</span><br><span class="line">      <span class="attr">options</span>: &#123;</span><br><span class="line">        <span class="attr">size</span>: <span class="keyword">new</span> H.<span class="property">math</span>.<span class="title class_">Size</span>(<span class="number">26</span>, <span class="number">34</span>),</span><br><span class="line">        <span class="attr">anchor</span>: <span class="keyword">new</span> H.<span class="property">math</span>.<span class="title class_">Point</span>(<span class="number">14</span>, <span class="number">34</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">origin</span>: &#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;./images/origin.png&#x27;</span>,</span><br><span class="line">      <span class="attr">options</span>: &#123;</span><br><span class="line">        <span class="attr">size</span>: <span class="keyword">new</span> H.<span class="property">math</span>.<span class="title class_">Size</span>(<span class="number">32</span>, <span class="number">32</span>),</span><br><span class="line">        <span class="attr">anchor</span>: <span class="keyword">new</span> H.<span class="property">math</span>.<span class="title class_">Point</span>(<span class="number">12</span>, <span class="number">36</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">destination</span>: &#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;./images/destination.png&#x27;</span>,</span><br><span class="line">      <span class="attr">options</span>: &#123;</span><br><span class="line">        <span class="attr">size</span>: <span class="keyword">new</span> H.<span class="property">math</span>.<span class="title class_">Size</span>(<span class="number">32</span>, <span class="number">32</span>),</span><br><span class="line">        <span class="attr">anchor</span>: <span class="keyword">new</span> H.<span class="property">math</span>.<span class="title class_">Point</span>(<span class="number">12</span>, <span class="number">36</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (icons[icon]) &#123;</span><br><span class="line">    markerOptions = &#123;</span><br><span class="line">      <span class="attr">icon</span>: <span class="keyword">new</span> H.<span class="property">map</span>.<span class="title class_">Icon</span>(icons[icon].<span class="property">url</span>, icons[icon].<span class="property">options</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> marker = <span class="keyword">new</span> H.<span class="property">map</span>.<span class="title class_">Marker</span>(coordinates, markerOptions)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">map</span>.<span class="title function_">addObject</span>(marker)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> marker</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-Route-Selection"><a href="#2-Route-Selection" class="headerlink" title="2  Route Selection"></a>2  Route Selection</h3><p>在显示的三条路线中，允许用户选择一条作为最佳选项，那么我们需要在onSuccess()中增加一个回调函数来实现。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> onSuccess = <span class="keyword">function</span> (<span class="params">result</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (result.<span class="property">response</span>.<span class="property">route</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> routeLineGroup = <span class="keyword">new</span> H.<span class="property">map</span>.<span class="title class_">Group</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> routes = result.<span class="property">response</span>.<span class="property">route</span>.<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">route</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> routeLine = <span class="title function_">drawRoute</span>(route)</span><br><span class="line">      routeLineGroup.<span class="title function_">addObject</span>(routeLine)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">route</span>: route,</span><br><span class="line">        <span class="attr">routeLine</span>: routeLine</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    map.<span class="title function_">addObject</span>(routeLineGroup)</span><br><span class="line">    map.<span class="title function_">setViewBounds</span>(routeLineGroup.<span class="title function_">getBounds</span>())</span><br><span class="line"></span><br><span class="line">    <span class="title function_">onRouteSelection</span>(routes[<span class="number">0</span>])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了在地图上高亮出选中的路线，就需要给Polyline指定不同的制图符号，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> routeLineStyles = &#123;</span><br><span class="line">  <span class="attr">normal</span>: &#123; <span class="attr">strokeColor</span>: <span class="string">&#x27;rgba(0, 85, 170, 0.5)&#x27;</span>, <span class="attr">lineWidth</span>: <span class="number">3</span> &#125;,</span><br><span class="line">  <span class="attr">selected</span>: &#123; <span class="attr">strokeColor</span>: <span class="string">&#x27;rgba(255, 0, 0, 0.7)&#x27;</span>, <span class="attr">lineWidth</span>: <span class="number">7</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>路线选择的目的是为了允许用户用户点选prefer的道路，因此我们需要增加一个函数，允许渲染引擎更改道路的符号，<code>onRouteSelection()</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> onRouteSelection = <span class="keyword">function</span> (<span class="params">route</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;A route has been selected.&#x27;</span>, route)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了测试以上逻辑的正确与否，做个简单测试，在onSuccess()中调用onRouteSelection()，并且将返回结果中的第一条路线作为参数传入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pass the first route as argument for temperary testing</span></span><br><span class="line"><span class="title function_">onRouteSelection</span>(routes[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>到这里，你可能会发现被选中的道路可能位于其他道路之下，因此在道路的公共部分出现了叠加的多层效果。为了确保所选道路在所有道路之上显示，我们可以设置下渲染顺序，即 z-index。如下例子中，10 为更接近上层的渲染顺序。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">if</span> (selectedRoute) &#123;</span><br><span class="line">      selectedRoute.<span class="property">routeLine</span>.<span class="title function_">setStyle</span>(routeLineStyles.<span class="property">normal</span>).<span class="title function_">setZIndex</span>(<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    route.<span class="property">routeLine</span>.<span class="title function_">setStyle</span>(routeLineStyles.<span class="property">selected</span>).<span class="title function_">setZIndex</span>(<span class="number">10</span>)</span><br><span class="line">    selectedRoute = route</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就清爽了很多。</p><p><img data-src="/images/blogImg/Icecream_Part4_Adcanced_Routing_2.png"></p><h3 id="3-Route-Selection-Panel"><a href="#3-Route-Selection-Panel" class="headerlink" title="3 Route Selection Panel"></a>3 Route Selection Panel</h3><p>这一步我们最后完善与道路的“交互”。 增加一个小的面板指示已经选择的道路。我们将这一部分的功能也放到另外一个独立的脚本文件中，在 scripts目录下新建一个<code>routes_panel.js</code>的文件。当然，不要忘记在 html 页面中增加加载此脚本文件的语句。 <code>&lt;script src=&quot;scripts/routes_panel.js&quot;&gt;&lt;/script&gt;</code></p><p>另外，在html文件中需要增加一个容器来渲染路线选择面板。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;route-panel&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>定义 <em>HERERoutesPanel</em> 类，用于渲染路线选择面板中的内容，详见我的GitHub 中 <a href="https://github.com/kikitaMoon/HERE_JS_Who_Wants_Icecream/blob/master/Part4_Advanced_Routing_SS5_selectionPanel/scripts/routes_panel.js"> <strong>routes_panel.js</strong></a> 的内容。</p><p><img data-src="/images/blogImg/Icecream_Part4_Adcanced_Routing_Panel.png"></p><h3 id="4-Directions"><a href="#4-Directions" class="headerlink" title="4 Directions"></a>4 Directions</h3><p>HERE Routing API 也会返回自然语言形式的导航信息（direction information），继续再 <code>HERERoutesPanel</code>类中增加内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> renderRouteElement = <span class="keyword">function</span> (<span class="params">route, i</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> element = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> routeSummary = route.<span class="property">route</span>.<span class="property">summary</span></span><br><span class="line">    element.<span class="property">innerHTML</span> = <span class="title function_">renderRouteTitle</span>(routeSummary, i)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> maneuvers = route.<span class="property">route</span>.<span class="property">leg</span>[<span class="number">0</span>].<span class="property">maneuver</span></span><br><span class="line">    element.<span class="property">innerHTML</span> += <span class="title function_">renderManeuvers</span>(maneuvers)</span><br></pre></td></tr></table></figure><p>上面代码中， <code>leg</code> 是什么？ 一个<code>leg</code>代表的是两个 waypoint之间的路线部分，求算一条路线至少要有起点和终点两个 waypoint，其他的waypoint 可以是途经点。见 Developer doc：<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vZG9jdW1lbnRhdGlvbi9yb3V0aW5nL3RvcGljcy93YXlwb2ludHMuaHRtbA==">Waypoints<i class="fa fa-external-link-alt"></i></span> 。</p><p>看起来HERE已经提供了 pre-formatted maneuver instruction string，那么就直接用好了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> renderManeuvers = <span class="keyword">function</span> (<span class="params">maneuvers</span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> [</span><br><span class="line">     <span class="string">&#x27;&lt;ol class=&quot;directions&quot;&gt;&#x27;</span>,</span><br><span class="line">     maneuvers.<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">maneuver</span>) &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&#x27;&lt;li&gt;&#x27;</span> + maneuver.<span class="property">instruction</span> + <span class="string">&#x27;&lt;/li&gt;&#x27;</span></span><br><span class="line">     &#125;).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>),</span><br><span class="line">     <span class="string">&#x27;&lt;/ol&gt;&#x27;</span></span><br><span class="line">   ].<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>这篇Tutorial的原文巨长，看得我一度想放弃，因为最近工作忙碌的关系，断断续续总算看完了； 并且参照原文思路和示例代码review完结。</p><p><img data-src="/images/blogImg/Icecream_Part4_Adcanced_Routing_Direction.png"></p><br><p><em>original resource</em>  <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vYmxvZy93aG8td2FudHMtaWNlLWNyZWFtLWEtaGVyZS1tYXBzLWFwaS1mb3ItamF2YXNjcmlwdC10dXRvcmlhbC1wYXJ0LTQtYWR2YW5jZWQtcm91dGluZw==">Part4: Advanced Routing<i class="fa fa-external-link-alt"></i></span></p><p><em>complete code</em>   <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tpa2l0YU1vb24vSEVSRV9KU19XaG9fV2FudHNfSWNlY3JlYW0vdHJlZS9tYXN0ZXIvUGFydDRfQWR2YW5jZWRfUm91dGluZ19TUzVfc2VsZWN0aW9uUGFuZWw=">Github - kikitaMoon&#x2F;HERE_JS_Who_Wants_Icecream<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在上一篇中，尝试给出三条备选路线方案，只是看看是不够的，还需要做些交互式的操作支持。&lt;/p&gt;
&lt;h3 id=&quot;1-Visual-Tweaks&quot;&gt;&lt;a href=&quot;#1-Visual-Tweaks&quot; class=&quot;headerlink&quot; title=&quot;1 Visual Tweaks&quot;&gt;&lt;/a&gt;1 Visual Tweaks&lt;/h3&gt;&lt;p&gt;首先，这里我们做点小小的视觉调整，让路线和位置更漂亮一点。例如：&lt;/p&gt;
&lt;p&gt;给路线的加上半透明效果，在&lt;code&gt;drawRoute()&lt;/code&gt;中增加：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; routeLine = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; H.&lt;span class=&quot;property&quot;&gt;map&lt;/span&gt;.&lt;span class=&quot;title class_&quot;&gt;Polyline&lt;/span&gt;(strip, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;: &amp;#123; &lt;span class=&quot;attr&quot;&gt;strokeColor&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;rgba(0, 85, 170, 0.5)&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;lineWidth&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;再给配送的起点、终点，快递员的当前位置赋予不同的显示符号，在&lt;code&gt;map.js&lt;/code&gt;中修改&lt;code&gt;addMarker()&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title class_&quot;&gt;HEREMap&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;prototype&lt;/span&gt;&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;addMarker&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;coordinates, icon&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// Add an markerOptions object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; markerOptions = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// three different icons for origin, destination and the user&amp;#x27;s current position&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; icons = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;iceCream&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;./images/marker-gelato.svg&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;options&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;size&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; H.&lt;span class=&quot;property&quot;&gt;math&lt;/span&gt;.&lt;span class=&quot;title class_&quot;&gt;Size&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;anchor&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; H.&lt;span class=&quot;property&quot;&gt;math&lt;/span&gt;.&lt;span class=&quot;title class_&quot;&gt;Point&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;origin&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;./images/origin.png&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;options&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;size&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; H.&lt;span class=&quot;property&quot;&gt;math&lt;/span&gt;.&lt;span class=&quot;title class_&quot;&gt;Size&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;anchor&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; H.&lt;span class=&quot;property&quot;&gt;math&lt;/span&gt;.&lt;span class=&quot;title class_&quot;&gt;Point&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;destination&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;./images/destination.png&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;options&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;size&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; H.&lt;span class=&quot;property&quot;&gt;math&lt;/span&gt;.&lt;span class=&quot;title class_&quot;&gt;Size&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;anchor&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; H.&lt;span class=&quot;property&quot;&gt;math&lt;/span&gt;.&lt;span class=&quot;title class_&quot;&gt;Point&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (icons[icon]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    markerOptions = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;icon&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; H.&lt;span class=&quot;property&quot;&gt;map&lt;/span&gt;.&lt;span class=&quot;title class_&quot;&gt;Icon&lt;/span&gt;(icons[icon].&lt;span class=&quot;property&quot;&gt;url&lt;/span&gt;, icons[icon].&lt;span class=&quot;property&quot;&gt;options&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; marker = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; H.&lt;span class=&quot;property&quot;&gt;map&lt;/span&gt;.&lt;span class=&quot;title class_&quot;&gt;Marker&lt;/span&gt;(coordinates, markerOptions)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;map&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;addObject&lt;/span&gt;(marker)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; marker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&quot;2-Route-Selection&quot;&gt;&lt;a href=&quot;#2-Route-Selection&quot; class=&quot;headerlink&quot; title=&quot;2  Route Selection&quot;&gt;&lt;/a&gt;2  Route Selection&lt;/h3&gt;&lt;p&gt;在显示的三条路线中，允许用户选择一条作为最佳选项，那么我们需要在onSuccess()中增加一个回调函数来实现。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; onSuccess = &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (result.&lt;span class=&quot;property&quot;&gt;response&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;route&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; routeLineGroup = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; H.&lt;span class=&quot;property&quot;&gt;map&lt;/span&gt;.&lt;span class=&quot;title class_&quot;&gt;Group&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; routes = result.&lt;span class=&quot;property&quot;&gt;response&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;route&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;route&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; routeLine = &lt;span class=&quot;title function_&quot;&gt;drawRoute&lt;/span&gt;(route)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      routeLineGroup.&lt;span class=&quot;title function_&quot;&gt;addObject&lt;/span&gt;(routeLine)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;route&lt;/span&gt;: route,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;routeLine&lt;/span&gt;: routeLine&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    map.&lt;span class=&quot;title function_&quot;&gt;addObject&lt;/span&gt;(routeLineGroup)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    map.&lt;span class=&quot;title function_&quot;&gt;setViewBounds&lt;/span&gt;(routeLineGroup.&lt;span class=&quot;title function_&quot;&gt;getBounds&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title function_&quot;&gt;onRouteSelection&lt;/span&gt;(routes[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Tech Notes" scheme="https://kikitamap.com/categories/Tech-Notes/"/>
    
    
    <category term="HERE Map" scheme="https://kikitamap.com/tags/HERE-Map/"/>
    
    <category term="HLS" scheme="https://kikitamap.com/tags/HLS/"/>
    
    <category term="Javascript" scheme="https://kikitamap.com/tags/Javascript/"/>
    
    <category term="Routing" scheme="https://kikitamap.com/tags/Routing/"/>
    
  </entry>
  
  <entry>
    <title>HERE MAP API - Part4 Advanced Routing - 1</title>
    <link href="https://kikitamap.com/2019/03/06/Icecream_Part4_Advanced_Routing_1/"/>
    <id>https://kikitamap.com/2019/03/06/Icecream_Part4_Advanced_Routing_1/</id>
    <published>2019-03-06T05:18:30.000Z</published>
    <updated>2024-12-24T03:31:31.523Z</updated>
    
    <content type="html"><![CDATA[<p>在 Part 3 中我们了解到如何调用 HERE Routing API 实现两点间路径规划，以及如何从当前位置出发规划路径。</p><p>这个部分继续来看看，如何展示多条路线及其信息，并允许用户交互选择。</p><h3 id="Pre-session-重构代码"><a href="#Pre-session-重构代码" class="headerlink" title="Pre-session: 重构代码"></a>Pre-session: 重构代码</h3><p>这一部分不是改进功能，而是整理思绪。磨刀不误砍柴工，放之四海而皆准。</p><p>冰淇凌小网页的功能不断增多，代码也随之膨胀，我们要时不时地整理收纳一下，避免自己在找乐子的路上备受打击。</p><p>在 Scripts 文件夹中，新建：</p><ul><li>map.js  用于存放和<strong>底图</strong>及<strong>绘制路线</strong>相关的逻辑；</li><li>utils.js  用于存放<strong>辅助功能</strong>，例如，将 latlog 坐标转化成 WayPointString 以供 Routing Service 使用。</li></ul><p>代码与Part 3 类似，但是因为做了重构，需要注意其中的调用关系及 html页面中的加载顺序。</p><p><em>complete code</em>  <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tpa2l0YU1vb24vSEVSRV9KU19XaG9fV2FudHNfSWNlY3JlYW0vdHJlZS9tYXN0ZXIvUGFydDRfQWR2YW5jZWRfUm91dGluZ19TUzFfcmVmYWN0b3I=">Github - kikitaMoon&#x2F;HERE_JS_Who_Wants_Icecream<i class="fa fa-external-link-alt"></i></span></p><h3 id="Multiple-Routes"><a href="#Multiple-Routes" class="headerlink" title="Multiple Routes"></a>Multiple Routes</h3><p>在日常导航出行时，多给出几条路线供用户选择，也是一个极常见的需求。</p><p>使用 HERE Routing API 计算路线时，可在请求中加入参数 <code>alternatives</code> 来获得多个推荐路线。</p><p>alternatives: 2； 即，1 (primary) + 2 (alternatives) &#x3D; 3  条路线。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">HEREMap</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">drawRoute</span> = <span class="keyword">function</span> (<span class="params">fromCoordinates, toCoordinates</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> routeOptions = &#123;</span><br><span class="line">        <span class="attr">mode</span>: <span class="string">&#x27;fastest;car&#x27;</span>,</span><br><span class="line">        <span class="attr">representation</span>: <span class="string">&#x27;display&#x27;</span>,</span><br><span class="line">        # add parameter</span><br><span class="line">        <span class="attr">alternatives</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">waypoint0</span>: <span class="title class_">Utils</span>.<span class="title function_">locationToWaypointString</span>(fromCoordinates),</span><br><span class="line">        <span class="attr">waypoint1</span>: <span class="title class_">Utils</span>.<span class="title function_">locationToWaypointString</span>(toCoordinates)</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">routes</span> = <span class="keyword">new</span> <span class="title class_">HERERoute</span>(<span class="variable language_">this</span>.<span class="property">map</span>, <span class="variable language_">this</span>.<span class="property">platform</span>, routeOptions);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>由于产生了多条道路，绘制道路的过程就要被执行多次，那么我们就把 <code>drawRoute</code> 函数挪到 <code>route.js</code> 中的 <code>HERERoute</code> 对象中，以供每次绘制道路调用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Add drawRoute Function to HERERoute</span></span><br><span class="line">    <span class="keyword">var</span> drawRoute = <span class="keyword">function</span> (<span class="params">route</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> routeShape = route.<span class="property">shape</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="title class_">LineString</span> = <span class="keyword">new</span> H.<span class="property">geo</span>.<span class="title class_">LineString</span>();</span><br><span class="line"></span><br><span class="line">        routeShape.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">point</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> parts = point.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">            <span class="title class_">LineString</span>.<span class="title function_">pushLatLngAlt</span>(parts[<span class="number">0</span>], parts[<span class="number">1</span>]);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> routeLine = <span class="keyword">new</span> H.<span class="property">map</span>.<span class="title class_">Polyline</span>(<span class="title class_">LineString</span>, &#123;</span><br><span class="line">            <span class="attr">style</span>: &#123;</span><br><span class="line">                <span class="attr">strokeColor</span>: <span class="string">&#x27;blue&#x27;</span>,</span><br><span class="line">                <span class="attr">lineWidth</span>: <span class="number">3</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        map.<span class="title function_">addObject</span>(routeLine);</span><br><span class="line">        <span class="comment">// map.setViewBounds(routeLine.getBounds());</span></span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><p>与此同时，做 <code>onSuccess</code>函数的对应修改，在返回结果中依次调用 <code>drawRoute</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> onSuccess = <span class="keyword">function</span> (<span class="params">result</span>) &#123;</span><br><span class="line">       <span class="comment">// Simplify on success function</span></span><br><span class="line">       <span class="keyword">if</span> (result.<span class="property">response</span>.<span class="property">route</span>) &#123;</span><br><span class="line">           <span class="keyword">var</span> routes = result.<span class="property">response</span>.<span class="property">route</span>;</span><br><span class="line">           <span class="title class_">Setting</span> view bounds</span><br><span class="line">           routes.<span class="title function_">forEach</span>(drawRoute);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;;</span><br></pre></td></tr></table></figure><p>Bingo！</p><p><img data-src="/images/blogImg/Icecream_Part4_Advanced_Routing.png"></p><h3 id="View-Bounds"><a href="#View-Bounds" class="headerlink" title="View Bounds"></a>View Bounds</h3><p>基本功能已实现，为了更好的体验，我们继续加工加工。</p><p>在 Part 3 中的我们通过 <code>setViewBounds</code>  将地图显示为路线的范围，在Part 4 中显然就不适用了，因为这样只会返回跳转到最后一条路线的范围。将所有的路线加入到一个组中，然后跳转组的范围，来解决这个问题。</p><p>对 <code>onSuccess</code> 进行修改：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> onSuccess = <span class="keyword">function</span> (<span class="params">result</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (result.<span class="property">response</span>.<span class="property">route</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> routes = result.<span class="property">response</span>.<span class="property">route</span>;</span><br><span class="line">        <span class="comment">// Setting view bounds</span></span><br><span class="line">        <span class="comment">// routes.forEach(drawRoute);</span></span><br><span class="line">        <span class="comment">// add all routes to a group</span></span><br><span class="line">        <span class="keyword">var</span> routeLines = routes.<span class="title function_">map</span>(drawRoute);</span><br><span class="line">        <span class="keyword">var</span> routeLineGroup = <span class="keyword">new</span> H.<span class="property">map</span>.<span class="title class_">Group</span>(&#123;</span><br><span class="line">            <span class="attr">objects</span>: routeLines</span><br><span class="line">        &#125;);</span><br><span class="line">        map.<span class="title function_">addObject</span>(routeLineGroup);</span><br><span class="line">        map.<span class="title function_">setViewBounds</span>(routeLineGroup.<span class="title function_">getBounds</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>同时移除 <code>drawRoute</code> 中原先的 <code>setViewBounds</code>语句，并向 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vZG9jdW1lbnRhdGlvbi9tYXBzL3RvcGljc19hcGkvaC1tYXAtZ3JvdXAuaHRtbA==">H.map.Group<i class="fa fa-external-link-alt"></i></span> 容器中增加返回的route。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Setting view bounds using Group bounds not the last route</span></span><br><span class="line"><span class="comment">// map.addObject(routeLine);</span></span><br><span class="line"><span class="comment">// map.setViewBounds(routeLine.getBounds());</span></span><br><span class="line"><span class="keyword">return</span> routeLine;</span><br></pre></td></tr></table></figure><br><p><em>original resource</em>  <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vYmxvZy93aG8td2FudHMtaWNlLWNyZWFtLWEtaGVyZS1tYXBzLWFwaS1mb3ItamF2YXNjcmlwdC10dXRvcmlhbC1wYXJ0LTQtYWR2YW5jZWQtcm91dGluZw==">Part4: Advanced Routing<i class="fa fa-external-link-alt"></i></span></p><p><em>complete code</em>   <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tpa2l0YU1vb24vSEVSRV9KU19XaG9fV2FudHNfSWNlY3JlYW0vdHJlZS9tYXN0ZXIvUGFydDRfQWR2YW5jZWRfUm91dGluZ19TUzJfbXVsdGlSb3V0ZXM=">Github - kikitaMoon&#x2F;HERE_JS_Who_Wants_Icecream<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在 Part 3 中我们了解到如何调用 HERE Routing API 实现两点间路径规划，以及如何从当前位置出发规划路径。&lt;/p&gt;
&lt;p&gt;这个部分继续来看看，如何展示多条路线及其信息，并允许用户交互选择。&lt;/p&gt;
&lt;h3 id=&quot;Pre-session-重构代码&quot;&gt;&lt;a href=&quot;#Pre-session-重构代码&quot; class=&quot;headerlink&quot; title=&quot;Pre-session: 重构代码&quot;&gt;&lt;/a&gt;Pre-session: 重构代码&lt;/h3&gt;&lt;p&gt;这一部分不是改进功能，而是整理思绪。磨刀不误砍柴工，放之四海而皆准。&lt;/p&gt;
&lt;p&gt;冰淇凌小网页的功能不断增多，代码也随之膨胀，我们要时不时地整理收纳一下，避免自己在找乐子的路上备受打击。&lt;/p&gt;
&lt;p&gt;在 Scripts 文件夹中，新建：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;map.js  用于存放和&lt;strong&gt;底图&lt;/strong&gt;及&lt;strong&gt;绘制路线&lt;/strong&gt;相关的逻辑；&lt;/li&gt;
&lt;li&gt;utils.js  用于存放&lt;strong&gt;辅助功能&lt;/strong&gt;，例如，将 latlog 坐标转化成 WayPointString 以供 Routing Service 使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码与Part 3 类似，但是因为做了重构，需要注意其中的调用关系及 html页面中的加载顺序。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;complete code&lt;/em&gt;  &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9naXRodWIuY29tL2tpa2l0YU1vb24vSEVSRV9KU19XaG9fV2FudHNfSWNlY3JlYW0vdHJlZS9tYXN0ZXIvUGFydDRfQWR2YW5jZWRfUm91dGluZ19TUzFfcmVmYWN0b3I=&quot;&gt;Github - kikitaMoon&amp;#x2F;HERE_JS_Who_Wants_Icecream&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;Multiple-Routes&quot;&gt;&lt;a href=&quot;#Multiple-Routes&quot; class=&quot;headerlink&quot; title=&quot;Multiple Routes&quot;&gt;&lt;/a&gt;Multiple Routes&lt;/h3&gt;</summary>
    
    
    
    <category term="Tech Notes" scheme="https://kikitamap.com/categories/Tech-Notes/"/>
    
    
    <category term="HERE Map" scheme="https://kikitamap.com/tags/HERE-Map/"/>
    
    <category term="HLS" scheme="https://kikitamap.com/tags/HLS/"/>
    
    <category term="Javascript" scheme="https://kikitamap.com/tags/Javascript/"/>
    
    <category term="Routing" scheme="https://kikitamap.com/tags/Routing/"/>
    
  </entry>
  
  <entry>
    <title>HERE MAP API - Part3 Basic Routing</title>
    <link href="https://kikitamap.com/2019/03/05/Icecream_Part3_Basic_Routing/"/>
    <id>https://kikitamap.com/2019/03/05/Icecream_Part3_Basic_Routing/</id>
    <published>2019-03-05T08:13:16.000Z</published>
    <updated>2024-12-24T03:31:31.522Z</updated>
    
    <content type="html"><![CDATA[<p>Part 1 中我们准备了底图，Part 2 中我们获取了位置，现在终于开张了，“您有新的  ‘ 饿了乎 ’  订单到了！”  我们给外卖小哥规划下路线吧！</p><h3 id="1-Routing-Service"><a href="#1-Routing-Service" class="headerlink" title="1 Routing Service"></a>1 Routing Service</h3><p>首先，HERE Map API 中提供了一个叫做 Platform 的类，实例化Platform后，我就可以借以访问 HERE Routing Service。 有关 Routing API 的帮助文档，点<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vZG9jdW1lbnRhdGlvbi9yb3V0aW5nL3RvcGljcy93aGF0LWlzLmh0bWw=">这里<i class="fa fa-external-link-alt"></i></span>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> platform = <span class="keyword">new</span> H.<span class="property">service</span>.<span class="title class_">Platform</span>(&#123;</span><br><span class="line"><span class="attr">app_id</span>: <span class="string">&#x27;[YOUR APP ID HERE]&#x27;</span>,</span><br><span class="line"><span class="attr">app_code</span>: <span class="string">&#x27;[YOUR APP CODE HERE]&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> router = platform.<span class="title function_">getRoutingService</span>();</span><br></pre></td></tr></table></figure><h3 id="2-Request-Route"><a href="#2-Request-Route" class="headerlink" title="2 Request Route"></a>2 Request Route</h3><p>在发请求之前，需要先至少定义起点和终点，或者必要的时候增加途经点，这些点是通过 <code>WayPointParameterType</code> 对象传递。</p><p>为了让代码更简洁易维护，我们在 <code>scripts</code> 目录下创建一个 <code>route.js</code>文件，取代开始直接在 <code>app.js</code>中直接调用 Routing Service 的繁琐。如下，在 route.js 中增加一个用于封装 底图、platform对象、路径规划参数的 <code>HERERoute</code>函数，这个函数也会在浏览器控制台返回简单的错误日志。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// build a function to take the map and platform objects as parameters</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">HERERoute</span> (<span class="params">map, platform, routeOptions</span>) &#123;</span><br><span class="line"><span class="comment">// access the routing service by calling getRoutingService()</span></span><br><span class="line">    <span class="keyword">var</span> router = platform.<span class="title function_">getRoutingService</span>();</span><br><span class="line"><span class="comment">// error handling    </span></span><br><span class="line">    <span class="keyword">var</span> onSuccess = <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Route found!&#x27;</span>, result);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> onError = <span class="keyword">function</span>(<span class="params">error</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Oh no! There was some communication error!&#x27;</span>, error);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    router.<span class="title function_">calculateRoute</span>(routeOptions, onSuccess, onError);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="3-Drawing-the-Route"><a href="#3-Drawing-the-Route" class="headerlink" title="3 Drawing the Route"></a>3 Drawing the Route</h3><p>现在我们可以在控制台看到 response，<strong>如何将 route 绘制到地图上呢</strong>？</p><p>在成功返回结果的函数中增加如下代码，其中 Option_2 的部分用于实现向地图绘制路径：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> onSuccess = <span class="keyword">function</span> (<span class="params">result</span>) &#123;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// Option_1 Simply put the response to the console log</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Route found!&#x27;</span>, result);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Option_2 Furtherly draw the response to the map</span></span><br><span class="line">        <span class="keyword">var</span> route,</span><br><span class="line">            routeShape,</span><br><span class="line">            startPoint,</span><br><span class="line">            endPoint,</span><br><span class="line">            lineString;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (result.<span class="property">response</span>.<span class="property">route</span>) &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// Just take the first Route in the array</span></span><br><span class="line">            route = result.<span class="property">response</span>.<span class="property">route</span>[<span class="number">0</span>];</span><br><span class="line">            routeShape = route.<span class="property">shape</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// H.geo.LineString is recommended, instead of H.geo.Strip in the offical demo code</span></span><br><span class="line">            lineString = <span class="keyword">new</span> H.<span class="property">geo</span>.<span class="title class_">LineString</span>();</span><br><span class="line">            routeShape.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">point</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> parts = point.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">                lineString.<span class="title function_">pushLatLngAlt</span>(parts[<span class="number">0</span>], parts[<span class="number">1</span>]);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Utilize H.map.Polyline to draw a blue line</span></span><br><span class="line">            <span class="keyword">var</span> routeLine = <span class="keyword">new</span> H.<span class="property">map</span>.<span class="title class_">Polyline</span>(lineString, &#123;</span><br><span class="line">                <span class="attr">style</span>: &#123;</span><br><span class="line">                    <span class="attr">strokeColor</span>: <span class="string">&#x27;blue&#x27;</span>,</span><br><span class="line">                    <span class="attr">lineWidth</span>: <span class="number">10</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            map.<span class="title function_">addObject</span>(routeLine);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// update the map bounds to that of our route</span></span><br><span class="line">            map.<span class="title function_">setViewBounds</span>(routeLine.<span class="title function_">getBounds</span>());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><blockquote><p><strong>备注</strong></p><ul><li>原文写得早一些，示例代码中 <code>H.geo.Strip</code>类已经从 HERE Maps JS API v3.0.15.0 及之后弃用了，需要使用 <code>H.geo.LineString</code> 类来替换。详情点 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vZG9jdW1lbnRhdGlvbi9tYXBzL3RvcGljc19hcGkvaC1nZW8tc3RyaXAuaHRtbA==">这里<i class="fa fa-external-link-alt"></i></span> 。</li><li>如上代码是我修改后的版本。</li></ul></blockquote><p><img data-src="/images/blogImg/Icecream_Part3_Basic_Routing.png"></p><h3 id="4-More"><a href="#4-More" class="headerlink" title="4 More"></a>4 More</h3><p>到 Steps 3 路径规划的功能基本实现了，Step 4 再增加一个获取当前位置作为起点，并将指定位置作为终点的功能吧。</p><p>例如，外卖小哥要给颐和园逛公园的小朋友送去冰凉可口的冰激凌……</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// a small helper which converts a location into a waypoint</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">locationToWaypointString</span>(<span class="params">coordinates</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;geo!&#x27;</span> + coordinates.<span class="property">lat</span> + <span class="string">&#x27;,&#x27;</span> + coordinates.<span class="property">lng</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// set a flag called RouteRendered</span></span><br><span class="line"><span class="comment">// to ensure that the route is only rendered the first time</span></span><br><span class="line"><span class="keyword">var</span> routeRendered = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updatePosition</span>(<span class="params">event</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> coordinates = &#123;</span><br><span class="line">    <span class="attr">lat</span>: event.<span class="property">coords</span>.<span class="property">latitude</span>,</span><br><span class="line">    <span class="attr">lng</span>: event.<span class="property">coords</span>.<span class="property">longitude</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> marker = <span class="keyword">new</span> H.<span class="property">map</span>.<span class="title class_">Marker</span>(coordinates);</span><br><span class="line">  map.<span class="title function_">addObject</span>(marker);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// If the route has not been rendered yet, </span></span><br><span class="line">  <span class="comment">// calculate and render it</span></span><br><span class="line">  <span class="keyword">if</span> (!routeRendered) &#123;</span><br><span class="line">    <span class="keyword">var</span> route = <span class="keyword">new</span> <span class="title class_">HERERoute</span>(map, platform, &#123;</span><br><span class="line">      <span class="attr">mode</span>: <span class="string">&#x27;fastest;car&#x27;</span>,</span><br><span class="line">      <span class="attr">representation</span>: <span class="string">&#x27;display&#x27;</span>,</span><br><span class="line">      <span class="attr">waypoint0</span>: <span class="title function_">locationToWaypointString</span>(coordinates),</span><br><span class="line">      <span class="attr">waypoint1</span>: <span class="title function_">locationToWaypointString</span>(<span class="title class_">EndCoordinates</span>)</span><br><span class="line">    &#125;);</span><br><span class="line">    routeRendered = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// request the user&#x27;s current location</span></span><br><span class="line">navigator.<span class="property">geolocation</span>.<span class="title function_">watchPosition</span>(updatePosition);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结果大概是这样：</p><p><img data-src="/images/blogImg/Icecream_Part3_Basic_Routing_current.png"></p><blockquote><p>由于相关法律的限制，HERE Developer 网站中提供免费试用的中国境内的 HERE 在线地图是非常粗略的等级（Entry Level），如下代码仅为了展示功能，并不为了较真位置的精确程度。</p><p> 当然，精密级别的 China HERE Map 也已经上线了 ，并且有 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vZG9jdW1lbnRhdGlvbj92YXJpYW50PWNu">China Spec HLS API<i class="fa fa-external-link-alt"></i></span> 可供使用，只是没有默认包含在<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vZG9jdW1lbnRhdGlvbj9jcmVhdGU9RnJlZW1pdW0tQmFzaWMma2VlcFN0YXRlPXRydWUmc3RlcD10ZXJtcw==">Global Freemium licenses<i class="fa fa-external-link-alt"></i></span> 之中。如果需要试用评估或购买，需要通过 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vY29udGFjdC11cyNjb250YWN0LXNhbGVz">商务途径<i class="fa fa-external-link-alt"></i></span>；也可以留言我，我也愿意帮助联系。</p></blockquote><p><em>original resource</em>  <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vYmxvZy93aG8td2FudHMtaWNlLWNyZWFtLWEtaGVyZS1tYXBzLWFwaS1mb3ItamF2YXNjcmlwdC10dXRvcmlhbC1wYXJ0LTMtYmFzaWMtcm91dGluZw==">Part3: Basic Routing<i class="fa fa-external-link-alt"></i></span></p><p><em>complete code</em>  <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tpa2l0YU1vb24vSEVSRV9KU19XaG9fV2FudHNfSWNlY3JlYW0vdHJlZS9tYXN0ZXIvUGFydDNfQmFzaWNfUm91dGluZw==">Github - kikitaMoon&#x2F;HERE_JS_Who_Wants_Icecream<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Part 1 中我们准备了底图，Part 2 中我们获取了位置，现在终于开张了，“您有新的  ‘ 饿了乎 ’  订单到了！”  我们给外卖小哥规划下路线吧！&lt;/p&gt;
&lt;h3 id=&quot;1-Routing-Service&quot;&gt;&lt;a href=&quot;#1-Routing-Service&quot; class=&quot;headerlink&quot; title=&quot;1 Routing Service&quot;&gt;&lt;/a&gt;1 Routing Service&lt;/h3&gt;&lt;p&gt;首先，HERE Map API 中提供了一个叫做 Platform 的类，实例化Platform后，我就可以借以访问 HERE Routing Service。 有关 Routing API 的帮助文档，点&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vZG9jdW1lbnRhdGlvbi9yb3V0aW5nL3RvcGljcy93aGF0LWlzLmh0bWw=&quot;&gt;这里&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; platform = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; H.&lt;span class=&quot;property&quot;&gt;service&lt;/span&gt;.&lt;span class=&quot;title class_&quot;&gt;Platform&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;app_id&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;[YOUR APP ID HERE]&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attr&quot;&gt;app_code&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;[YOUR APP CODE HERE]&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; router = platform.&lt;span class=&quot;title function_&quot;&gt;getRoutingService&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&quot;2-Request-Route&quot;&gt;&lt;a href=&quot;#2-Request-Route&quot; class=&quot;headerlink&quot; title=&quot;2 Request Route&quot;&gt;&lt;/a&gt;2 Request Route&lt;/h3&gt;&lt;p&gt;在发请求之前，需要先至少定义起点和终点，或者必要的时候增加途经点，这些点是通过 &lt;code&gt;WayPointParameterType&lt;/code&gt; 对象传递。&lt;/p&gt;
&lt;p&gt;为了让代码更简洁易维护，我们在 &lt;code&gt;scripts&lt;/code&gt; 目录下创建一个 &lt;code&gt;route.js&lt;/code&gt;文件，取代开始直接在 &lt;code&gt;app.js&lt;/code&gt;中直接调用 Routing Service 的繁琐。如下，在 route.js 中增加一个用于封装 底图、platform对象、路径规划参数的 &lt;code&gt;HERERoute&lt;/code&gt;函数，这个函数也会在浏览器控制台返回简单的错误日志。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// build a function to take the map and platform objects as parameters&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title function_&quot;&gt;HERERoute&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;map, platform, routeOptions&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// access the routing service by calling getRoutingService()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; router = platform.&lt;span class=&quot;title function_&quot;&gt;getRoutingService&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// error handling    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; onSuccess = &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;Route found!&amp;#x27;&lt;/span&gt;, result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; onError = &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;Oh no! There was some communication error!&amp;#x27;&lt;/span&gt;, error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    router.&lt;span class=&quot;title function_&quot;&gt;calculateRoute&lt;/span&gt;(routeOptions, onSuccess, onError);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&quot;3-Drawing-the-Route&quot;&gt;&lt;a href=&quot;#3-Drawing-the-Route&quot; class=&quot;headerlink&quot; title=&quot;3 Drawing the Route&quot;&gt;&lt;/a&gt;3 Drawing the Route&lt;/h3&gt;&lt;p&gt;现在我们可以在控制台看到 response，&lt;strong&gt;如何将 route 绘制到地图上呢&lt;/strong&gt;？&lt;/p&gt;</summary>
    
    
    
    <category term="Tech Notes" scheme="https://kikitamap.com/categories/Tech-Notes/"/>
    
    
    <category term="HERE Map" scheme="https://kikitamap.com/tags/HERE-Map/"/>
    
    <category term="HLS" scheme="https://kikitamap.com/tags/HLS/"/>
    
    <category term="Javascript" scheme="https://kikitamap.com/tags/Javascript/"/>
    
    <category term="Routing" scheme="https://kikitamap.com/tags/Routing/"/>
    
  </entry>
  
  <entry>
    <title>HERE MAP API - Part2 Geolocation</title>
    <link href="https://kikitamap.com/2019/03/05/Icecream_Part2_Geolocation/"/>
    <id>https://kikitamap.com/2019/03/05/Icecream_Part2_Geolocation/</id>
    <published>2019-03-05T07:52:54.000Z</published>
    <updated>2024-12-24T03:31:31.521Z</updated>
    
    <content type="html"><![CDATA[<p>在 Part 1 地图底图准备好的基础之上，我们增加一个获取浏览器当前位置并持续更新的功能，来解决“Where am I ？”的问题。</p><p>具体可以通过浏览器的 Geolocation API 来实现。在app.js 脚本中，使用 <code>navigator.geolocation</code> 对象来访问此API。 <code>navigator.geolocation</code> 对象有这样几个方法：<code>getCurrentPosition()</code>，<code>watchPosition()</code>，<code>clearWatch()</code>， 可以帮助我们实现开始的需求。</p><h3 id="1-获取位置"><a href="#1-获取位置" class="headerlink" title="1 获取位置"></a>1 获取位置</h3><p>首先，通过 <code>getCurrentPosition()</code> 一次性获取浏览器当前位置，在 app.js 中使用如下代码 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">navigator.<span class="property">geolocation</span>.<span class="title function_">getCurrentPosition</span>(success[, error[, options]]);</span><br></pre></td></tr></table></figure><p>各个浏览器都有 Geolocation API 的支持，建议参考相关的帮助文档。这个Demo建议在 Firefox 中测试，因为Chrome似乎禁用从本地文件访问位置。你可以根据需要增加获取位置是否成功后的行为，详情查看 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1Bvc2l0aW9uT3B0aW9ucw==">Firefox的开发者文档<i class="fa fa-external-link-alt"></i></span>。 </p><p><img data-src="/images/blogImg/Icecream_Part2_Geolocation.png"></p><h3 id="2-持续更新位置"><a href="#2-持续更新位置" class="headerlink" title="2 持续更新位置"></a>2 持续更新位置</h3><p><code>watchPosition()</code> 用于持续“关注” 客户端位置的变化，在每次变化之后，都会将新的位置返回。在 app.js 中增加如下代码，用于在当前位置不断地显示“冰激凌”。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">updatePosition</span> (<span class="params">event</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> coordinates = &#123;</span><br><span class="line">    <span class="attr">lat</span>: event.<span class="property">coords</span>.<span class="property">latitude</span>,</span><br><span class="line">    <span class="attr">lng</span>: event.<span class="property">coords</span>.<span class="property">longitude</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">var</span> iconUrl = <span class="string">&#x27;./images/icecream.svg&#x27;</span>;</span><br><span class="line">  <span class="keyword">var</span> iconOptions = &#123;</span><br><span class="line">    <span class="attr">size</span>: <span class="keyword">new</span> H.<span class="property">math</span>.<span class="title class_">Size</span>(<span class="number">26</span>, <span class="number">34</span>),</span><br><span class="line">    <span class="attr">anchor</span>: <span class="keyword">new</span> H.<span class="property">math</span>.<span class="title class_">Point</span>(<span class="number">14</span>, <span class="number">34</span>)</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">var</span> markerOptions = &#123;</span><br><span class="line">    <span class="attr">icon</span>: <span class="keyword">new</span> H.<span class="property">map</span>.<span class="title class_">Icon</span>(iconUrl, iconOptions)</span><br><span class="line">  &#125;;</span><br><span class="line">   <span class="keyword">var</span> marker = <span class="keyword">new</span> H.<span class="property">map</span>.<span class="title class_">Marker</span>(coordinates, markerOptions);</span><br><span class="line">  map.<span class="title function_">addObject</span>(marker);</span><br><span class="line">  map.<span class="title function_">setCenter</span>(coordinates);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Action</span></span><br><span class="line">navigator.<span class="property">geolocation</span>.<span class="title function_">watchPosition</span>(updatePosition);</span><br></pre></td></tr></table></figure><p><img data-src="/images/blogImg/Icecream_Part2_Geolocation_view.png"></p><p><em>original resource</em>    <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vYmxvZy93aG8td2FudHMtaWNlLWNyZWFtLWEtaGVyZS1tYXBzLWFwaS1mb3ItamF2YXNjcmlwdC10dXRvcmlhbC1wYXJ0LTItZ2VvbG9jYXRpb24=">Part2: Geolocation<i class="fa fa-external-link-alt"></i></span></p><p><em>complete code</em>    <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tpa2l0YU1vb24vSEVSRV9KU19XaG9fV2FudHNfSWNlY3JlYW0vdHJlZS9tYXN0ZXIvUGFydDJfR2VvbG9jYXRpb24=">Github - kikitaMoon&#x2F;HERE_JS_Who_Wants_Icecream<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在 Part 1 地图底图准备好的基础之上，我们增加一个获取浏览器当前位置并持续更新的功能，来解决“Where am I ？”的问题。&lt;/p&gt;
&lt;p&gt;具体可以通过浏览器的 Geolocation API 来实现。在app.js 脚本中，使用 &lt;code&gt;navigator.geolocation&lt;/code&gt; 对象来访问此API。 &lt;code&gt;navigator.geolocation&lt;/code&gt; 对象有这样几个方法：&lt;code&gt;getCurrentPosition()&lt;/code&gt;，&lt;code&gt;watchPosition()&lt;/code&gt;，&lt;code&gt;clearWatch()&lt;/code&gt;， 可以帮助我们实现开始的需求。&lt;/p&gt;
&lt;h3 id=&quot;1-获取位置&quot;&gt;&lt;a href=&quot;#1-获取位置&quot; class=&quot;headerlink&quot; title=&quot;1 获取位置&quot;&gt;&lt;/a&gt;1 获取位置&lt;/h3&gt;&lt;p&gt;首先，通过 &lt;code&gt;getCurrentPosition()&lt;/code&gt; 一次性获取浏览器当前位置，在 app.js 中使用如下代码 &lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;navigator.&lt;span class=&quot;property&quot;&gt;geolocation&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;getCurrentPosition&lt;/span&gt;(success[, error[, options]]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;各个浏览器都有 Geolocation API 的支持，建议参考相关的帮助文档。这个Demo建议在 Firefox 中测试，因为Chrome似乎禁用从本地文件访问位置。你可以根据需要增加获取位置是否成功后的行为，详情查看 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1Bvc2l0aW9uT3B0aW9ucw==&quot;&gt;Firefox的开发者文档&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;。 &lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;/images/blogImg/Icecream_Part2_Geolocation.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-持续更新位置&quot;&gt;&lt;a href=&quot;#2-持续更新位置&quot; class=&quot;headerlink&quot; title=&quot;2 持续更新位置&quot;&gt;&lt;/a&gt;2 持续更新位置&lt;/h3&gt;&lt;p&gt;&lt;code&gt;watchPosition()&lt;/code&gt; 用于持续“关注” 客户端位置的变化，在每次变化之后，都会将新的位置返回。在 app.js 中增加如下代码，用于在当前位置不断地显示“冰激凌”。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title function_&quot;&gt;updatePosition&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; coordinates = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;lat&lt;/span&gt;: event.&lt;span class=&quot;property&quot;&gt;coords&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;latitude&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;lng&lt;/span&gt;: event.&lt;span class=&quot;property&quot;&gt;coords&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;longitude&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; iconUrl = &lt;span class=&quot;string&quot;&gt;&amp;#x27;./images/icecream.svg&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; iconOptions = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;size&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; H.&lt;span class=&quot;property&quot;&gt;math&lt;/span&gt;.&lt;span class=&quot;title class_&quot;&gt;Size&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;anchor&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; H.&lt;span class=&quot;property&quot;&gt;math&lt;/span&gt;.&lt;span class=&quot;title class_&quot;&gt;Point&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; markerOptions = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;icon&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; H.&lt;span class=&quot;property&quot;&gt;map&lt;/span&gt;.&lt;span class=&quot;title class_&quot;&gt;Icon&lt;/span&gt;(iconUrl, iconOptions)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; marker = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; H.&lt;span class=&quot;property&quot;&gt;map&lt;/span&gt;.&lt;span class=&quot;title class_&quot;&gt;Marker&lt;/span&gt;(coordinates, markerOptions);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  map.&lt;span class=&quot;title function_&quot;&gt;addObject&lt;/span&gt;(marker);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  map.&lt;span class=&quot;title function_&quot;&gt;setCenter&lt;/span&gt;(coordinates);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Action&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;navigator.&lt;span class=&quot;property&quot;&gt;geolocation&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;watchPosition&lt;/span&gt;(updatePosition);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Tech Notes" scheme="https://kikitamap.com/categories/Tech-Notes/"/>
    
    
    <category term="HERE Map" scheme="https://kikitamap.com/tags/HERE-Map/"/>
    
    <category term="HLS" scheme="https://kikitamap.com/tags/HLS/"/>
    
    <category term="Javascript" scheme="https://kikitamap.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>HERE MAP API - Part1 Basemap Setup</title>
    <link href="https://kikitamap.com/2019/03/05/Icecream_Part1_Basemap_Setup/"/>
    <id>https://kikitamap.com/2019/03/05/Icecream_Part1_Basemap_Setup/</id>
    <published>2019-03-05T07:20:58.000Z</published>
    <updated>2024-12-24T03:31:31.520Z</updated>
    
    <content type="html"><![CDATA[<p>Quick Start for HERE Map Javascript API</p><p>HERE 官网有一个很有趣的Tutorial， <strong>Who wants ice cream !?</strong> </p><p>如果你注册了HERE Developer 账号，很可能会被推送到这个教程的小广告。</p><p>假设你是冰激凌店的老板，那么用HERE Map 做个交互式的地图小网页，边测试边记录。</p><p><em><strong>Let’s get our hands dirty……</strong></em></p><h3 id="1-准备资源"><a href="#1-准备资源" class="headerlink" title="1. 准备资源"></a>1. 准备资源</h3><p>准备如下结构的目录和文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">WhoWantsIceCream</span><br><span class="line">|--base_map_set_up.html</span><br><span class="line">|--scripts</span><br><span class="line">|--app.js</span><br><span class="line">|--images</span><br><span class="line">|--icecream.svg</span><br><span class="line">|--styles</span><br><span class="line">|--main.css</span><br></pre></td></tr></table></figure><h3 id="2-设计页面"><a href="#2-设计页面" class="headerlink" title="2.  设计页面"></a>2.  设计页面</h3><p>HTML 的 <code>head</code> 中引用 HERE Map JS API 以及必要的 CSS；</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span> Who Want&#x27;s Icecream ? <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- HERE Javascript SDK modules --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://js.api.here.com/v3/3.0/mapsjs-ui.css&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://js.api.here.com/v3/3.0/mapsjs-core.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://js.api.here.com/v3/3.0/mapsjs-service.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://js.api.here.com/v3/3.0/mapsjs-ui.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://js.api.here.com/v3/3.0/mapsjs-mapevents.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Styles --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;styles/main.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>HTML的 <code>body</code> 中需要至少包含一个<code>div</code> ，用于作为 地图显示的容器； 以及引用<code>js</code>来完成 map 的规定动作。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Container for the map --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;map-container&quot;</span> <span class="attr">class</span>=<span class="string">&quot;map&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Scripts --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;scripts/app.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-交互式地图底图"><a href="#3-交互式地图底图" class="headerlink" title="3. 交互式地图底图"></a>3. 交互式地图底图</h3><p><strong>增加如下内容到 app.js</strong> </p><p>1 从HERE Developer 网站申请账号，获取 APPID 和 APPCODE ，在初始化服务时使用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Get Map Container Element</span></span><br><span class="line"><span class="keyword">var</span> mapContainer = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;map-container&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Specify the APPID &amp; APPCODE</span></span><br><span class="line"><span class="keyword">var</span> platform = <span class="keyword">new</span> H.<span class="property">service</span>.<span class="title class_">Platform</span>(&#123;</span><br><span class="line">  <span class="attr">app_id</span>: <span class="string">&#x27;oyNWTb---PMlrXxCH&#x27;</span>, <span class="comment">// // &lt;-- ENTER YOUR APP ID HERE</span></span><br><span class="line">  <span class="attr">app_code</span>: <span class="string">&#x27;_W_7qfgp-----tQQKkbLA&#x27;</span>, <span class="comment">// &lt;-- ENTER YOUR APP CODE HERE</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2 创建 Map 对象，并指定初始化时的位置、显示级别、底图样式…… everything as you wish……</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ----------------------------------------------------------------------- </span></span><br><span class="line"><span class="comment">// Displaying a Basic Map， Initialize Map Object</span></span><br><span class="line"><span class="comment">// Create Defaulr Layer</span></span><br><span class="line"><span class="keyword">var</span> defaultLayers = platform.<span class="title function_">createDefaultLayers</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Adjust the Map Center and the Initial Zoom Level </span></span><br><span class="line"><span class="keyword">var</span> coordinates = &#123;</span><br><span class="line">  <span class="attr">lat</span>: <span class="number">52.530974</span>, <span class="comment">// HERE HQ in Berlin, Germany</span></span><br><span class="line">  <span class="attr">lng</span>: <span class="number">13.384944</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> mapOptions = &#123;</span><br><span class="line">  <span class="attr">center</span>: coordinates,</span><br><span class="line">  <span class="attr">zoom</span>: <span class="number">14</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> map = <span class="keyword">new</span> H.<span class="title class_">Map</span>(</span><br><span class="line">  mapContainer,</span><br><span class="line">  defaultLayers.<span class="property">normal</span>.<span class="property">map</span>,</span><br><span class="line">  mapOptions);</span><br></pre></td></tr></table></figure><p>3  让地图动起来，至少可以平移缩放，很简单的一段即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ----------------------------------------------------------------------- </span></span><br><span class="line"><span class="comment">// Interacting with the map, at least move around and zoom in / out</span></span><br><span class="line"><span class="keyword">var</span> behavior = <span class="keyword">new</span> H.<span class="property">mapevents</span>.<span class="title class_">Behavior</span>(<span class="keyword">new</span> H.<span class="property">mapevents</span>.<span class="title class_">MapEvents</span>(map));</span><br></pre></td></tr></table></figure><p>4 给地图中心加个图标， 换成一个自定义的也成。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// -----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">// Adding Markers to the Map</span></span><br><span class="line"><span class="keyword">var</span> marker = <span class="keyword">new</span> H.<span class="property">map</span>.<span class="title class_">Marker</span>(coordinates);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Custom Icons for Markers</span></span><br><span class="line"><span class="keyword">var</span> iconUrl = <span class="string">&#x27;./images/icecream.svg&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> iconOptions = &#123;</span><br><span class="line"><span class="comment">// The icon&#x27;s size in pixel:</span></span><br><span class="line">  <span class="attr">size</span>: <span class="keyword">new</span> H.<span class="property">math</span>.<span class="title class_">Size</span>(<span class="number">26</span>, <span class="number">34</span>),</span><br><span class="line"><span class="comment">// The anchorage point in pixel, </span></span><br><span class="line"><span class="comment">// defaults to bottom-center</span></span><br><span class="line">  <span class="attr">anchor</span>: <span class="keyword">new</span> H.<span class="property">math</span>.<span class="title class_">Point</span>(<span class="number">14</span>, <span class="number">34</span>)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> markerOptions = &#123;</span><br><span class="line">   <span class="attr">icon</span>: <span class="keyword">new</span> H.<span class="property">map</span>.<span class="title class_">Icon</span>(iconUrl, iconOptions)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> marker = <span class="keyword">new</span> H.<span class="property">map</span>.<span class="title class_">Marker</span>(coordinates, markerOptions);</span><br><span class="line">map.<span class="title function_">addObject</span>(marker);</span><br></pre></td></tr></table></figure><p>TIPS 加个监听，可以在你改变窗口尺寸的时候，自动更新地图的尺寸。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ----------------------------------------------------------------------- </span></span><br><span class="line"><span class="comment">// Set Event Listener to Make Map React Properly</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  map.<span class="title function_">getViewPort</span>().<span class="title function_">resize</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这就完成 Interactive Basemap 了，Have fun！</p><p> <img data-src="/images/blogImg/Icecream_Part1_Basemap_Setup.png"></p><p><em>original resource</em>  <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGVyZS5jb20vYmxvZy93aG8td2FudHMtaWNlLWNyZWFtLWEtaGVyZS1tYXBzLWFwaS1mb3ItamF2YXNjcmlwdC10dXRvcmlhbC1wYXJ0LTEtYmFzaWMtbWFwLXNldC11cA==">Part1: Basic Map Set-up<i class="fa fa-external-link-alt"></i></span></p><p><em>complete code</em>    <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2tpa2l0YU1vb24vSEVSRV9KU19XaG9fV2FudHNfSWNlY3JlYW0vdHJlZS9tYXN0ZXIvUGFydDFfQmFzaWNfTWFwX1NldF91cA==">Github - kikitaMoon&#x2F;HERE_JS_Who_Wants_Icecream<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Quick Start for HERE Map Javascript API&lt;/p&gt;
&lt;p&gt;HERE 官网有一个很有趣的Tutorial， &lt;strong&gt;Who wants ice cream !?&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;如果你注册了HERE Developer 账号，很可能会被推送到这个教程的小广告。&lt;/p&gt;
&lt;p&gt;假设你是冰激凌店的老板，那么用HERE Map 做个交互式的地图小网页，边测试边记录。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Let’s get our hands dirty……&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-准备资源&quot;&gt;&lt;a href=&quot;#1-准备资源&quot; class=&quot;headerlink&quot; title=&quot;1. 准备资源&quot;&gt;&lt;/a&gt;1. 准备资源&lt;/h3&gt;&lt;p&gt;准备如下结构的目录和文件：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;WhoWantsIceCream&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|--base_map_set_up.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|--scripts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	|--app.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|--images&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	|--icecream.svg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|--styles&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	|--main.css&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;2-设计页面&quot;&gt;&lt;a href=&quot;#2-设计页面&quot; class=&quot;headerlink&quot; title=&quot;2.  设计页面&quot;&gt;&lt;/a&gt;2.  设计页面&lt;/h3&gt;&lt;p&gt;HTML 的 &lt;code&gt;head&lt;/code&gt; 中引用 HERE Map JS API 以及必要的 CSS；&lt;/p&gt;</summary>
    
    
    
    <category term="Tech Notes" scheme="https://kikitamap.com/categories/Tech-Notes/"/>
    
    
    <category term="HERE Map" scheme="https://kikitamap.com/tags/HERE-Map/"/>
    
    <category term="HLS" scheme="https://kikitamap.com/tags/HLS/"/>
    
    <category term="Javascript" scheme="https://kikitamap.com/tags/Javascript/"/>
    
  </entry>
  
</feed>
